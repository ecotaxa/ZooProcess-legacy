// ----------------------Zooscan_create_project----------------------------------
version = "6.10";
date = "2009/03/28";

args = 	getArgument();
arg = 	split(args," ");
version = 	arg[0];
chem = 	arg[1];
check = 	arg[2];

//---------------------------------Liste les projets existants enregistres dans le fichier zooprocess.txt---------------------------
// le premier enregistrement est reserve au dernier projet ouvert
open(chem+"zooprocess.txt");
info = getInfo();
data = split(info,"\n");
fin = data.length;

run("Close");
pathlist = 	newArray(100);
pathdisplay = 	newArray(1);
prt = 		"all";
doc = 		 "first_data_only";

if (data[0] == "Test file used by ZooProcess to distinguish the Zooscan working directory from other Zooscan folders.") { 
	Dialog.create("WARNING           ");
	Dialog.addMessage("New version of Zooprocess creates now a project list in zooprocess.txt");
	Dialog.addMessage("You have to create now some new folders for your files                    \nOnce created, please move all your images and files in the right folders   ");
	Dialog.show();
	pathdisplay[0] = "NEW";
	prt = "first_data_only";
} // if  
else if (data[0] == "NEW") {	pathdisplay[0] = "NEW";	prt = "first_data_only";		} // else if 
else {	pathdisplay = newArray(data.length+1);
	for (i = 0;i<data.length;i++) { 	val = data[i];	end = lengthOf(val); 	pathdisplay[i] = substring(val,12,end);	pathlist[i] = val;	} // for
	pathdisplay[data.length] = "NEW";
} // else
docu = 0;
drives = newArray("C:\\","D:\\","E:\\","F:\\","G:\\","H:\\","I:\\","J:\\","K:\\");
while (check != 1) {
			affdrive = newArray(15);
			ind = 0;
			t= 0;
			while (t<drives.length) {
				if (File.exists(drives[t])) { 	ex = drives[t];	affdrive[ind] = ex;	ind++;	} // if
				t++;
			} // while
			aff = newArray(ind);
			for (r=0;r<ind;r++) { aff[r] = affdrive[r];	} // if
			toto = 1;
			while (toto == 1) {
				Dialog.create("PROJECT MANAGER version "+version);
				Dialog.addMessage("------------------------ NEW project --------------------------               ");
				Dialog.addMessage("To Import folder, select its drive and enter its name               ");
				Dialog.addMessage("Select drive (avoid selecting CD drive) !               ");
				Dialog.addChoice("           ",aff);
				Dialog.addMessage("Enter project name               ");
				Dialog.addString("           ","enter project name");    
				Dialog.show();
				drive = Dialog.getChoice();
				proj = Dialog.getString();
				proj = toLowerCase(proj);
				proj = replace(proj," ","_");
				if (proj != "enter_project_name") toto = 0;
			} // while
			path = drive+"Zooscan_"+proj;
			pathconfig =	path+"\\"+"\\Zooscan_config";
			pathmeta = 	path+"\\"+"\\Zooscan_meta\\";
			pathback = 	path+"\\"+"\\Zooscan_back\\";
			pathscan = 	path+"\\"+"\\Zooscan_scan";
			pathwork = 	path+"\\"+"\\Zooscan_scan\\"+"\\_work";
			pathraw = 	path+"\\"+"\\Zooscan_scan\\"+"\\_raw";
			pathresults = 	path+"\\"+"\\Zooscan_results";
			//------------------PID folders---------------------------------------
			pathpid = 		path+"\\"+"\\PID_process";
			pathlearn = 	path+"\\"+"\\PID_process\\"+"\\Learning_set\\";
			pathpidresults = 	path+"\\"+"\\PID_process\\"+"\\Pid_results\\";
			pathpredic = 	path+"\\"+"\\PID_process\\"+"\\Prediction\\";
			pathpidpredicted = 	path+"\\"+"\\PID_process\\"+"\\Pid_results\\"+"\\Pid_predicted\\";
			pathdat1extracted = 	path+"\\"+"\\PID_process\\"+"\\Pid_results\\"+"\\Dat1_extracted\\";
			pathvig = 		path+"\\"+"\\PID_process\\"+"\\Unsorted_vignettes_pid\\";
			pathsortedvig = 	path+"\\"+"\\PID_process\\"+"\\Sorted_vignettes\\";

			//---------------------------- Tester le nom dans la liste et verifier les repertoires --------------------------------------	
			for (i = 0;i<data.length;i++) { 
				if (path == pathlist[i]) {//----------------------Le nom existe dans la liste
					if (File.exists(path) && File.exists(pathconfig) && File.exists(pathmeta) && File.exists(pathscan)   && File.exists(pathwork) && File.exists(pathraw) && File.exists(pathresults)) {
						info = getBoolean(path+" already in list         \nPress YES to select this project          \nPress NO to choose another     ");
						if (info == 1) { // Tout est correct, on le selectionne
							doc = "do_not_add_to_list";
							docu = 0;
							check = 1;	
							pathlist[0] = path;
						} // if 
						else {	//-------------On n' a pas selectionne ce projet, il faut donc en choisir un autre 
							check = 2;	
						} // else	
					} // if	
	
				} // if
			} // for
			if (check == 0 ) {  //-------------------Verifions toutefois que les repertoires n'existent pas deja meme si le nom n'est pas dans la liste----------------------
				if (File.exists(path) && File.exists(pathconfig) && File.exists(pathmeta) && File.exists(pathscan)   && File.exists(pathwork) && File.exists(pathraw) && File.exists(pathresults)) {
					//-----------Les repertoires existent mais le nom n'est pas dans la liste
					info = getBoolean(path+" already exists on your computer                                \nPress YES to select this project and add it to the projects list         \nPress NO to create another     ");
					if (info == 1) { // Tout est correct, on le selectionne mais on ajoutera son nom dans la liste
						doc = "add_to_list";
						docu = 0;
						check = 1;	
						e= substring(path,0,2);
						c = lengthOf(path);
						b = substring(path,3,c);
						e = e+"\\";
						path = e+"\\"+b;
						pathlist[0] = path;
					} // if 
				} // if 
				else {
					// -------------------- Choix des options ----------------------------------------------------------
					Dialog.create("PROJECT MANAGER        version "+version);
					Dialog.addMessage("-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
					Dialog.addMessage("Project :  "+proj);
					Dialog.addMessage("-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
					Dialog.addCheckbox("Create scanning file for NARROW frame at 2400 dpi ?", true);
					Dialog.addCheckbox("Create scanning file for LARGE     frame at 1200 dpi ?", false);
					Dialog.addMessage("USE VUESCAN ''Load options'' tool to change scanning area and resolution (if necessary only).                            ");
					Dialog.addMessage("-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
					Dialog.addMessage("USE ''EDIT Configuration file'' tool to change setting (OD position, background subtract, process method...).                      ");
					process = newArray("Keep as before version 4","neutral","log-gamma2","log-gamma3");
					Dialog.addChoice("        Image process method (influences all the measurements), if any doubdt, select ''Keep as before v4''  ",process);
					Dialog.addMessage("-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
					Dialog.show();
					narrow = 	Dialog.getCheckbox();
					large = 	Dialog.getCheckbox();
					method = 	Dialog.getChoice();
					if (method == "Keep as before version 4") method = "0";
					//---------------------Creation des repertoires------------------------------------------------------------	
					File.makeDirectory(path);
					File.makeDirectory(pathconfig);
					File.makeDirectory(pathmeta);
					File.makeDirectory(pathscan);
					File.makeDirectory(pathwork);
					File.makeDirectory(pathraw);
					File.makeDirectory(pathresults);
					File.makeDirectory(pathback);
					//-----------------PID folders-----------------------------------------------------------------------------
					File.makeDirectory(pathpid);
					File.makeDirectory(pathlearn);
					File.makeDirectory(pathpidresults);
					File.makeDirectory(pathvig);
					File.makeDirectory(pathsortedvig);
					File.makeDirectory(pathpredic); 
					File.makeDirectory(pathpidpredicted); 
					File.makeDirectory(pathdat1extracted); 
					path = drive+"Zooscan_"+proj;
					e= substring(path,0,2);
					c = lengthOf(path);
					b = substring(path,3,c);
					e = e+"\\";
					path = e+"\\"+b;
					pathlist[0] = path;
					doc = "add_to_list";
					docu = 1;
					check = 1;	
					pathlist[0] = path;
				} // else
			} // check = 0
} // while

if (docu == 1) { 

//--------------------------------- Affichage de l'heure---------------------------------------
dateheure =	runMacro("Zooscan_get_time_5");

message = "Information on files";
// ------------------ Creation du fichier LUT ------------------------------
lutfile = 	File.exists(pathconfig+"\\lut.txt");
if (lutfile != 1) { 
	if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
	print("0");
	print("65536");
	print("1");
	print("before");
	print("yes");
	print("1.8");
	print("1.15");
	print("250");
	selectWindow("Log");
	text =  "save=" + pathconfig + "\\lut.txt";
	run("Text...",text);	
} // if
else { message = message+"\n ''lut.txt'' file not replaced.         ";	} // else

// ---------------- Donnees de base ----------------------------------------------------------
chemconfig =	chem+"\\Zooscan_config";
chemN =	chemconfig + "\\vuescan_zooscan_calibration_OD_level_cadre1.ini";
chemL =	chemconfig + "\\vuescan_zooscan_calibration_OD_level_cadre2.ini";
chemODnarrow = 	chemconfig + "\\process_install_narrow_config.txt";
chemODboth= 	chemconfig + "\\process_install_both_config.txt";
if (File.exists(chemconfig)) {
	//------------ Lecture des valeurs dans les fichiers
	if (File.exists(chemODnarrow)) {
		open(chemODnarrow);
		wait(500);
		config = getInfo();
		selectWindow("process_install_narrow_config.txt");		
		run("Close");
		conf  = split(config,"\n");
		for (i=0; i<conf.length; i++)	{ texte = conf[i];	
			ssarray = split(texte," ");	
			data = ssarray[1];		
			if (startsWith(texte,"doxabspos_inch=")) {	Xpos = data;	} // if
			if (startsWith( texte,"doyabspos_inch=")) {	Ypos = data;	} // if
		} // for
	} // if
	if (File.exists(chemODboth)) {
		open(chemODboth);
		wait(500);
		config = getInfo();
		selectWindow("process_install_both_config.txt");		
		run("Close");
		conf  = split(config,"\n");
		for (i=0; i<conf.length; i++)	{ texte = conf[i];	
			ssarray = split(texte," ");	
			data = ssarray[1];		
			if (startsWith(texte,"doxabspos_inch=")) {	Xpos = data;	} // if
			if (startsWith( texte,"doyabspos_inch=")) {	Ypos = data;	} // if
		} // for
	} // if
	else {	Xpos = 		0.3367;		
		Ypos = 	3.9928;		
	} // else
	if (File.exists(chemN)) {
		open(chemN);
		wait(500);
		config = getInfo();
		selectWindow("vuescan_zooscan_calibration_OD_level_cadre1.ini");		
		run("Close");
		conf  = split(config,"\n");
		for (i=0; i<conf.length; i++)	{ ssarray = conf[i];		
			if (startsWith(ssarray,"XOffset")) {	deb= indexOf(ssarray,"=");	
				long= lengthOf(ssarray); 	
				data = substring(ssarray,deb+1,long);
				XOffsetN = data;	
			} // if
			if (startsWith(ssarray,"YOffset")) {	deb= indexOf(ssarray,"=");	
				long= lengthOf(ssarray); 	
				data = substring(ssarray,deb+1,long);
				YOffsetN = data;	
			} // if
			if (startsWith(ssarray,"XSize")) {	deb= indexOf(ssarray,"=");	
				long= lengthOf(ssarray); 	
				data = substring(ssarray,deb+1,long);
				XSizeN = data;		
				} // if
			if (startsWith(ssarray,"YSize")) {	deb= indexOf(ssarray,"=");	
				long= lengthOf(ssarray); 	
				data = substring(ssarray,deb+1,long);
				YSizeN = data;		
			} // if
		} // for
	} // if
	else { 	XOffsetN = 	10194;
		YOffsetN = 	1393;
		XSizeN = 	20911;
		YSizeN = 	48502;
	} // else 
	if (File.exists(chemL)) { 
		open(chemL);
		wait(500);
		config = getInfo();
		selectWindow("vuescan_zooscan_calibration_OD_level_cadre2.ini");		
		run("Close");
		conf  = split(config,"\n");
		for (i=0; i<conf.length; i++)	{ ssarray = conf[i];					
			if (startsWith(ssarray,"XOffset")) {	deb= indexOf(ssarray,"=");	
				long= lengthOf(ssarray); 	
				data = substring(ssarray,deb+1,long);
				XOffsetL = data;	
			} // if
			if (startsWith(ssarray,"YOffset")) {	deb= indexOf(ssarray,"=");	
				long= lengthOf(ssarray); 	
				data = substring(ssarray,deb+1,long);
				YOffsetL = data;	
			} // if
			if (startsWith(ssarray,"XSize")) {	deb= indexOf(ssarray,"=");	
				long= lengthOf(ssarray); 	
				data = substring(ssarray,deb+1,long);
				XSizeL = data;		
			} // if
			if (startsWith(ssarray,"YSize")) {	deb= indexOf(ssarray,"=");	
				long= lengthOf(ssarray); 	
				data = substring(ssarray,deb+1,long);
				YSizeL = data;		
			} // if
		} // for
	} // if
	else { 	XOffsetL = 	5663;
		YOffsetL = 	1393;
		XSizeL = 	29886;
		YSizeL = 	48502;
	} // else 
} // if
else { 	Xpos = 		0.3367;		
	Ypos = 	3.9928;
	XOffsetN = 	10194;
	YOffsetN = 	1393;
	XSizeN = 	20911;
	YSizeN = 	48502;
	XOffsetL = 	5663;
	YOffsetL = 	1393;
	XSizeL = 	29886;
	YSizeL = 	48502;
} // else

// ----------------- Creation d'un fichier config du traitement -------
conffile = 	File.exists(pathconfig+"\\process_install_narrow_config.txt");
if (conffile != 1) { 
	if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
	print("background_process= last");
	print("enhance_thumbnail= no");
	print("calibration= created_"+dateheure);
	print("jpeg= 100");
	print("zip= 0");
	print("greycor= 4");
	print("resolution= 2400");
	print("greytaux= 0.9");
	print("yminref= 0");
	print("doyofset= 150");
	print("doxpos= 2");
	print("xdimref_inch= 0.025");
	print("ydimref_inch= 0.25");
	print("dostd= 2.0");
	print("doecart= 20.0");
	print("subimgx= 0");
	print("method= "+method);
	if (method == "0") 			upper = 250;
	else if (method == "neutral") 		upper = 243;
	else if (method == "log-gamma2") 	upper = 250;
	else {					upper = 250;	} // else
	print("upper= "+upper);
	print("greyref= 174");
	print("voxelwidth= 1");
	print("voxelheigth= 1");
	print("voveldepth= 1");
	print("voxelunit= pixel");
	print("backval= 100.0");
	print("minsizeesd_mm= 0.3");
	print("maxsizeesd_mm= 100");
	print("longline_mm= 1.0");
	print("doxabspos_inch= "+Xpos);
	print("doyabspos_inch= "+Ypos);
	print("bleft= 16.0");
	print("broll= 10.0");
	print("bright= 4.0");
	print("contrast_pourcent= 1.5");
	print("doubloonxy_inch= 0.05");
	print("doubloonarea_pourcent= 0.1");
	print("greylimit= 10");
	print("frame= narrow");
	selectWindow("Log");
	text =  "save=" + pathconfig + "\\process_install_both_config.txt";
	run("Text...",text);	
} // if
else { message = message+"\n ''process_install_narrow_config.txt'' file not replaced.                    ";	} // else

// ---------------- Creation des fichiers de scan pour vuescan -------
if (narrow == true || large == true) {
	Dialog.create("Scanning area  for plankton imaging           ");
	Dialog.addMessage("------------------------------------------------------------------------------------------------------------        ");
	Dialog.addMessage("Default values are read from the Zooprocess installation settings.          \nChange them according to calibration sheet if necessary.    \nor \nChange them according to the needs of your project    ");
	Dialog.addMessage("---------- Optical Density position -------------------------------------------------------------------        ");
	Dialog.addNumber("              X position  ",Xpos);
	Dialog.addNumber("              Y position  ",Ypos);
	if (narrow == true) {
		Dialog.addMessage("---------- NARROW FRAME --------------------------------------------------------------------------        ");
		Dialog.addNumber("              XOffset  ",XOffsetN);
		Dialog.addNumber("              YOffset  ",YOffsetN);
		Dialog.addNumber("              XSize ",XSizeN);
		Dialog.addNumber("              YSize ",YSizeN);
	} // if
	if (large == true) {
		Dialog.addMessage("---------- LARGE FRAME -----------------------------------------------------------------------------        ");
		Dialog.addNumber("              XOffset  ",XOffsetL);
		Dialog.addNumber("              YOffset  ",YOffsetL);
		Dialog.addNumber("              XSize ",XSizeL);
		Dialog.addNumber("              YSize ",YSizeL);
		Dialog.addMessage("------------------------------------------------------------------------------------------------------------        ");
	} // if
	Dialog.show;
	Xpos = 		Dialog.getNumber();
	Ypos = 		Dialog.getNumber();
	if (narrow == true) {
		XOffsetN = 	Dialog.getNumber();
		YOffsetN = 	Dialog.getNumber();
		XSizeN = 		Dialog.getNumber();
		YSizeN = 	Dialog.getNumber();
	} // if
	if (large == true) {
		XOffsetL = 	Dialog.getNumber();
		YOffsetL = 	Dialog.getNumber();
		XSizeL = 	Dialog.getNumber();
		YSizeL = 	Dialog.getNumber();
	} // if
} // if

// ---------------- Narrow --------------------
if (narrow == true) {
conffile = 	File.exists(pathconfig+"\\vuescan_zooscan_2400dpi_frame1_narrow.ini");
if (conffile != 1) { 
if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
print("[VueScan]");
print("[Input-Perfection4990-Flatbed]");
print("Media=1");
print("Quality=4");
print("BitsPerPixel=2");
print("MakeGrayFrom=2");
print("PreviewResolution=6");
print("ScanResolution=3");
print("Rotation=3");
print("Mirror=1");
print("[Input]");
print("Options=2");
print("[Crop-Perfection4990-Flatbed]");
print("AutoOffset=0");
print("AutoRotate=0");
print("CropSize=0");
print("XSize="+XSizeN);
print("YSize="+YSizeN);
print("PreviewArea=0");
print("PreviewXOffset="+XOffsetN);
print("PreviewYOffset="+YOffsetN);
print("PreviewXSize="+XSizeN);
print("PreviewYSize="+YSizeN);
print("[Crop]");
print("Options=2");
print("[Filter]");
print("Options=2");
print("[Color-Perfection4990-Flatbed]");
print("ColorBalance=0");
print("WhitePoint=0");
print("WhitePointRed=236");
print("WhitePointGreen=236");
print("WhitePointBlue=236");
print("Brightness=900");
print("[Color]");
print("PixelColors=1");
print("Options=2");
print("[Output-Perfection4990-Flatbed]");
print("PrintedUnits=0");
print("[Output]");
print("JPEGFile=0");
print("DefaultFolder=E:\\Zooscan_pointb_rg\\Zooscan_scan");
print("RawFile=1");
print("RawFileName=sample_1=.tif");
print("RawFileType=2");
print("RawCompression=0");
print("Copyright=Zooscan_CNRS_2006");
print("LogFile=0");
print("Options=2");
print("[Prefs]");
print("GraphType=2");
print("ExternalViewer=0");
print("ExternalEditor=0");
print("WindowXOffset=10");
print("WindowYOffset=10");
print("WindowXSize=1008");
print("WindowYSize=990");
print("GuidedMode=0");
print("EnablePopupTips=0");
print("StartupTip=0");
selectWindow("Log");
text =  "save=" + pathconfig + "\\vuescan_zooscan_2400dpi_frame1_narrow.ini";
run("Text...",text);	
run("Close");
} // if narrow
} // if
else { message = message+"\n ''vuescan_zooscan_2400dpi_frame1_narrow.ini'' file not replaced/created.                    ";	} // else


// ---------------- LARGE --------------------
if (large == true) {
conffile = 	File.exists(pathconfig+"\\vuescan_zooscan_1200dpi_frame2_large.ini");
if (conffile != 1) { 
if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
print("[VueScan]");
print("[Input-Perfection4990-Flatbed]");
print("Media=1");
print("Quality=4");
print("BitsPerPixel=2");
print("MakeGrayFrom=2");
print("PreviewResolution=6");
print("ScanResolution=4");
print("Rotation=3");
print("Mirror=1");
print("[Input]");
print("Options=2");
print("[Crop-Perfection4990-Flatbed]");
print("AutoOffset=0");
print("AutoRotate=0");
print("CropSize=0");
print("XSize="+XSizeL);
print("YSize="+YSizeL);
print("PreviewArea=0");
print("PreviewXOffset="+XOffsetL);
print("PreviewYOffset="+YOffsetL);
print("PreviewXSize="+XSizeL);
print("PreviewYSize="+YSizeL);
print("[Crop]");
print("Options=2");
print("[Filter]");
print("Options=2");
print("[Color-Perfection4990-Flatbed]");
print("ColorBalance=0");
print("WhitePoint=0");
print("WhitePointRed=236");
print("WhitePointGreen=236");
print("WhitePointBlue=236");
print("Brightness=900");
print("[Color]");
print("PixelColors=1");
print("Options=2");
print("[Output-Perfection4990-Flatbed]");
print("PrintedUnits=0");
print("[Output]");
print("JPEGFile=0");
print("DefaultFolder=E:\\Zooscan_pointb_rg\\Zooscan_scan");
print("RawFile=1");
print("RawFileName=sample_1=.tif");
print("RawFileType=2");
print("RawCompression=0");
print("Copyright=Zooscan_CNRS_2006");
print("LogFile=0");
print("Options=2");
print("[Prefs]");
print("GraphType=2");
print("ExternalViewer=0");
print("ExternalEditor=0");
print("WindowXOffset=10");
print("WindowYOffset=10");
print("WindowXSize=1008");
print("WindowYSize=990");
print("GuidedMode=0");
print("EnablePopupTips=0");
print("StartupTip=0");
selectWindow("Log");
text =  "save=" + pathconfig + "\\vuescan_zooscan_1200dpi_frame2_large.ini";
run("Text...",text);	
run("Close");
} // if large
} // if
else { message = message+"\n ''vuescan_zooscan_1200dpi_frame2_large.ini'' file not replaced/created.                    ";		} // else

if (message != "Information on files") { showMessage(message);	} // else
} // doc
else {showMessage("Configuration files NOT modified/replaced.                  ");

} // 
docu = toString(docu);
ret = docu+" "+check+" "+proj+" "+doc+" "+prt+" "+path+" "+fin;
return ret;
