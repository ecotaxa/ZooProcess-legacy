// ------------------------------- UVP_main ---------------------------------------------------------------------------------------------------
run("Misc...", "divide=Infinity antialiased_tool");
run("free memory");
setBatchMode(false);
version =	 "7.00";
date =	 "2010/08/05";
imagejversion = "1.41o";

getBoolean("OKa ?");


requires(imagejversion);
run("Colors...", "foreground=black background=white selection=red");
run("Input/Output...", "jpeg=100 file=.xls");
run("Profile Plot Options...", "width=450 height=200 minimum=0 maximum=0");

ecranw= screenWidth();
ecranh= screenHeight();

pathlist = newArray(100);
pathdisplay = newArray(1);

// --------------------------Affichage de la date et de l'heure ------------------
dateheure =	runMacro("Zooscan_get_time_5");

// ---------------------- Instrument list -----------------------------------------------------------------------------------------------------------------------
instrument = newArray("Zooscan","UVP5","Flowcam","Other");


getBoolean("OK ?");

//----------------------Selection AUTOMATIQUE du repertoire de travail chem----------------------------------------------------------------------
mat = newArray("C:\\Zooprocess\\","C:\\Zooprocess\\","D:\\Zooprocess\\","E:\\Zooprocess\\","F:\\Zooprocess\\","G:\\Zooprocess\\","H:\\Zooprocess\\");
check= 0;
flag=0;
i = 0;
while (i<mat.length) {
	chem= mat[i];
	conf1= File.exists(chem+"instrument.txt");
	if (conf1==1) { flag = 1;		i=mat.length+1;	
		// ---------------- Selection instrument -------------------------------------
		open(chem+"instrument.txt");
		wait(100);
		info = getInfo();
		data = split(info,"\n");
		dat = split(data[0]," ");
		instrum	 = dat[1];
		dat = split(data[1]," ");
		previouspath	 = dat[1];
		run("Close");
		longinst = 	lengthOf(instrum);
	} // if
	i++;
} // while
chemtemp =		chem+"\\temp\\";


getBoolean("OK1 ?");

// --------------------- Installation initiale --------------------------------------------------------------------------------------------------------------------
install = 0;
if (flag==0) {
	// --------------- Selection du drive pour les repertoires -------------
	drives = newArray("C:\\","D:\\","E:\\","F:\\","G:\\","H:\\","I:\\","J:\\","K:\\");
	affdrive = newArray(15);
	ind = 0;
	t= 0;
	while (t<drives.length) {
		if (File.exists(drives[t])) { 	ex = drives[t];	affdrive[ind] = ex;	ind++;	} // if
		t++;
	} // while
	aff = newArray(ind);
	for (r=0;r<ind;r++) { aff[r] = affdrive[r];	} // for

	// ------------------------ Selection de l'instrument ------------------------------------------------
	Dialog.create("INSTALL MANAGER version "+version);
	Dialog.addMessage("Select drive to install the Zoosprocess root folder (avoid to select CD drive) !               ");
	Dialog.addChoice("           ",aff);
	Dialog.addMessage("Select instrument !               ");
	Dialog.addChoice("           ",instrument);
	Dialog.show();
	drive = 		Dialog.getChoice();
	instrum = 	Dialog.getChoice();
//	showMessage("-"+instrum+"-");
	if (instrum == "Zooscan" && (ecranw <1260 || ecranh < 1020)) { getBoolean("The dimensions of your monitor are less than 1280 x 1024.                                 \n     \nPress YES to Continue.     \nPress CANCEL to ABORT.             ");	} // if

	// ---------------------- Creation repertoires Zooprocess -----------------------------------------
	chem =		drive+"Zooprocess\\";
	File.makeDirectory(chem);
	chemtemp =		drive+"Zooprocess\\temp\\";
	File.makeDirectory(chemtemp);
	// ---------------------- Creation fichier instrument -----------------------------------------------
	if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
	print("Instrument= "+instrum);
	print("path= xx");
	print("created= "+dateheure);
	text =  "save=" + chem+"\\instrument.txt";
	selectWindow("Log");
	run("Text...",text);	
	run("Close");	
	// --------------------- Creation d'un premier projet -----------------------------------------------
	showMessage("Zooprocess installed. \nYou must create a first project now.                                  ");
		ret = runMacro("Zooprocess_create_project",chem+" "+dateheure+" "+instrum);
		flag=toString(ret);
		l= lengthOf(flag);
		if (l==1)  { 	showMessage("Error message",op+" process aborted.                       "); 	} // if
	install = 1;	
} // if

// -------------------------------------Menu INITIAL----------------------------------------------------------------------------------------------------------------
check = 0;
rin = 0;

// ------------------------------------- Taille ecran -----------------------------------------------------------------------------------------------------------------
if (instrum == "Zooscan" && (ecranw <1260 || ecranh < 1020)) { getBoolean("The dimensions of your monitor are less than 1280 x 1024.                                 \n     \nPress YES to Continue.     \nPress CANCEL to ABORT.             ");	} // if

// ------------------------------------ Vers ANCIENNE version limitee Zooscan -----------------------------------------------------------------------------
if (instrum == "Zooscan") {
	ret = runMacro("ZooProcess_",instrum+" "+chem);
	flag = toString(ret);
	l= lengthOf(flag);
	if (l==1)  { 	showMessage("Error message Zooscan process aborted.                       "); 	} // if
	else { pathdisplay[0] = flag;	}	// else
} // if

getBoolean("OK2 ?");

// ------------------------------ Catalogue automatique des projets -----------------------------------------------------------------------------------------
drives = newArray("C:\\","D:\\","E:\\","F:\\","G:\\","H:\\","I:\\","J:\\","K:\\","L:\\","M:\\","N:\\","O:\\","P:\\","Q:\\","R:\\","S:\\","T:\\","U:\\","V:\\","W:\\","X:\\","Y:\\","Z:\\");
affdrive = newArray(25);
ind = 0;
t= 0;
while (t<drives.length) {
	if (File.exists(drives[t])) { 	ex = drives[t];	affdrive[ind] = ex;	ind++;	} // if
	t++;
} // while
aff = newArray(ind);

// ---------------- Recherche dans chaque drive ---------------
if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
// ---------------- Dernier utilise = 1ere ligne Zooprocess ---------------------
print(previouspath);
pathlist[0] = previouspath;
j = 1;
list = newArray(500);
display = newArray(500);
for (r=0;r<ind;r++) { 
	drive = affdrive[r];	
	listrep = getFileList(drive);
	// ------------ Si finit par / et commence par instrument ---------------------------------
	for (x=0;x<listrep.length;x++) {
		rep = listrep[x];

		// ---------------------- Zooscan ------------------------------------------------------
		if (endsWith(rep,"/") && startsWith(rep,instrum+"_") && instrum == "Zooscan" ) { 
			long = 	lengthOf(rep);
			dir = 	substring(rep,0,long-1);
			
			dirdisplay = 	substring(rep,8,long-1);
			// --------------- test du projet ----------------------------------------------
			proj = dirdisplay;
			path = drive+"Zooscan_"+proj;
			pathconfig =	path+"\\"+"\\Zooscan_config";
			pathmeta = 	path+"\\"+"\\Zooscan_meta\\";
			pathback = 	path+"\\"+"\\Zooscan_back\\";
			pathscan = 	path+"\\"+"\\Zooscan_scan";
			pathwork = 	path+"\\"+"\\Zooscan_scan\\"+"\\_work";
			pathraw = 	path+"\\"+"\\Zooscan_scan\\"+"\\_raw";
			pathresults = 	path+"\\"+"\\Zooscan_results";
			if (File.exists(pathback) && File.exists(pathconfig) && File.exists(pathmeta) && File.exists(pathscan)   && File.exists(pathwork) && File.exists(pathraw) && File.exists(pathresults)) {
				display[j] = dirdisplay;
				pathlist[j] = drive+"\\"+dir;
				print(pathlist[j]); 
				j++;  
			} // if
		} // if

		// ---------------------- Flowcam, UVP5 et Oher -----------------------------------------------------
		if (endsWith(rep,"/") && startsWith(rep,instrum+"_")) { 
			long = 		lengthOf(rep);
			dir = 	substring(rep,0,long-1);
			
			dirdisplay = 	substring(rep,longinst+1,long-1);
			// --------------- test du projet ----------------------------------------------
			proj = dirdisplay;
			path = drive+instrum+"_"+proj;
			pathconfig =	path+"\\"+"\\config";
			pathmeta = 	path+"\\"+"\\meta\\";
			pathback = 	path+"\\"+"\\back\\";
			pathwork = 	path+"\\"+"\\work";
			pathraw = 	path+"\\"+"\\raw";
			pathresults = 	path+"\\"+"\\results";
			if (File.exists(pathback) && File.exists(pathconfig) && File.exists(pathmeta)   && File.exists(pathwork) && File.exists(pathraw) && File.exists(pathresults)) {
				display[j] = dirdisplay;
				pathlist[j] = drive+"\\"+dir;
				print(pathlist[j]); 
				j++;  
			} // if
		} // if
	} // for
}// for

// ------------------------- PATHDISPLAY --------------------------------------
pathdisplay = newArray(j);
long = lengthOf(previouspath);
test = indexOf(previouspath,instrum);
if (test <0 || File.exists(previouspath)== false) { 	pathdisplay[0] = "DO_NOT_SELECT";				} // if
else {		pathdisplay[0] = substring(previouspath,5+longinst,long);	} // else
for (x=1;x<j;x++) { rr = display[x];
	pathdisplay[x] = rr;
} // for

getBoolean("OK3 ?");

// -------------------------------------- Liste des outils -----------------------------------------------------------
	a=newArray(35);
	for (i=0;i<a.length;i++) {	a[i]=" ";		} // for
	
	a[0]=	"Fill in metadata";			//	OK !
	if (instrum == "UVP5") {				a[2]=	"Process DAT, BRU, PID and VIGNETTES";			} // if 
	if (instrum == "Flowcam" || instrum == "Other"){ 	a[2]=	"Process PID and VIGNETTES";				} // if		OK !

	a[5]=	"Extract vignettes according to prediction";			
	a[6]=	"Load vignette from folders";			
	a[7]=	"Create sub-learningset";				//	Projet

	a[10]=	"Create project";				//	OK !
	a[11]=	"Edit configuration file";			//	OK !
	a[12]=	"Select another instrument";			//	OK !

	a[20]=	"UVP4_convert_BMP_to_JPG";					
	a[21] = 	"UVP4_convert_TIF_to_JPG";			//	Projet
	a[22] = 	"CLOSE all opened IMAGES";




// ------------------------------ Menu principal ------------------------------------------------------------------------
while (rin== 0) {
	check = 0;
	while (check == 0) {	
		Dialog.create("ZOOPROCESS                                              version "+version+"                          "+date);
		Dialog.addMessage("----------------------------------------------------------------------------------------------------------------------");
		Dialog.addMessage("-----------------------------------------  Instrument : "+instrum+"  ----------------------------------------------");
		Dialog.addMessage("--------------------------------------            ZOOPROCESS             ----------------------------------------");
		Dialog.addMessage("--------------------------------------     for ImageJ version "+imagejversion+"     ----------------------------------------");
		Dialog.addMessage("----------------------------------------------------------------------------------------------------------------------");
		Dialog.addMessage("                             Laboratoire d'Oceanologie de Villefranche sur mer");
		Dialog.addMessage("                                                             CNRS - UPMC");
		Dialog.addMessage("                                                        picheral@obs-vlfr.fr");
		Dialog.addMessage("                 Please refer to Zooprocess and ImageJ if used for Publication");
		Dialog.addMessage("                                           http://rsb.info.nih.gov/ij/index.html");
		Dialog.addMessage("----------------------------------------------------------------------------------------------------------------------");
		Dialog.addMessage("   SELECT PROCESS for "+instrum);
		Dialog.addChoice("      ",a);
		Dialog.addMessage("----------------------------------------------------------------------------------------------------------------------");
		Dialog.addMessage("SELECT PROJECT ");
		Dialog.addChoice("          ",pathdisplay);
		Dialog.addMessage("----------------------------------------------------------------------------------------------------------------------");
		Dialog.show();
		op = 		Dialog.getChoice();
		proj = 		Dialog.getChoice();
		if (op == "Create NEW project") { 	proj = "NEW";				} // if

		// ----------------------- Attribution PATH -----------------------------------------------
		if (proj != "DO_NOT_SELECT") {
			check = 1;
			for (i=0;i<pathdisplay.length;i++) { 
				if (pathdisplay[i] == proj) { 
					path = pathlist[i];
					index = i;
				} // if
			} // for
		} // if
	} // while check

	pathdisplay[0] = proj;
	// ------------------------ MAJ du fichier instrument -----------------------------
	open(chem+"instrument.txt");
	wait(100);
	info = getInfo();
	data = split(info,"\n");
	run("Close");
	if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
	print(data[0]);
	print("path= "+path);
	print(data[2]);
	text =  "save=" + chem+"\\instrument.txt";
	selectWindow("Log");
	run("Text...",text);	
	run("Close");

	//=====================================  SELECTION ==================================================
//	if (op != "EXIT UVP tools" ) dircruise = getDirectory("Select CRUISE root directory");

	//-------------------- "Select another instrument" ---------------------------------------------------------------------
	if (op =="Select another instrument") {
		ret = runMacro("Zooprocess_change_instrum",chem+" "+dateheure);
		instrum=toString(ret);
		l= lengthOf(instrum);
		if (l==1)  { 	showMessage("Error message",op+" process aborted.                       "); 	} // if
		else { showMessage("New instrument : "+instrum+"\n \nRestart application !");	rin = 1;}	// else
	} // if
	//-------------------- "Create project" ---------------------------------------------------------------------
	else if (op =="Create project") {
		ret = runMacro("Zooprocess_create_project",chem+" "+dateheure+" "+instrum);
		flag = toString(ret);
		l= lengthOf(flag);
		if (l==1)  { 	showMessage("Error message",op+" process aborted.                       "); 	} // if
		else { pathdisplay[0] = flag;	}	// else
	} // if
	//-------------------- "Edit configuration file" ---------------------------------------------------------------------
	else if (op =="Edit configuration file") {
		pathconfig =	path+"\\config\\";
		ret = runMacro("Zooprocess_edit_configuration",pathconfig+" "+instrum+" edit "+path);
		flag=toString(ret);
		l= lengthOf(flag);
		if (l==1)  { 	showMessage("Error message",op+" process aborted.                       "); 	} // if
	} // if

	//-------------------- "Fill in metadata" ---------------------------------------------------------------------
	else if (op =="Fill in metadata") {
		if (instrum == "UVP5") {
			ret = runMacro("Zooprocess_uvp5_metadata",instrum+" add "+path);
		} //
		if (instrum == "Flowcam") {
			ret = runMacro("Zooprocess_flowcam_metadata",pathconfig+" "+instrum+" edit "+path);
		} //
		flag=toString(ret);
		l= lengthOf(flag);
		if (l==1)  { 	showMessage("Error message",op+" process aborted.                       "); 	} // if
	} // if

	// ------------------ "Process DAT, BRU, PID and VIGNETTES" & "Process PID and VIGNETTES" ------------------------------------------------
	else if (op =="Process DAT, BRU, PID and VIGNETTES" || op == "Process PID and VIGNETTES" ) {
		ret = runMacro("Zooprocess_main_process_dat_bru_pid_vig",path+" "+instrum);
		flag=toString(ret);
		l= lengthOf(flag);
		if (l==1)  { 	showMessage("Error message"+op+" process aborted.                       "); 	} // if
	} // else if


	//--------------------"CLOSE all opened IMAGES"---------------------------------------------------------------------
	else if  (op =="CLOSE all opened IMAGES") {
		while (nImages()>0) {	selectImage(nImages());  		run("Close");	} // while	
		//	rin = 1;
	} // if

	// ------------------ "EXIT UVP tools" -------------------------------------------------------------------------------------
	else if (op =="EXIT UVP tools") {
		//----------------------- Close OPEN IMAGES---------------------------------
		while (nImages()>0) {	selectImage(nImages());  		run("Close");	} // while	
		rin = 1;
	} // if



	// ------------------"UVP4_convert_BMP_to_JPG"------------------------------------------------
	else if (op =="UVP4_convert_BMP_to_JPG") {
		ret = runMacro("UVP4_convert_BMP_to_JPG");
		flag=toString(ret);
		l= lengthOf(flag);
		if (l==1)  { 	showMessage("Error message",op+" process aborted.                       "); 	} // if
	} // else if
	
	// ------------------"Extract vignettes according to prediction"------------------------------------------------
	else if (op =="Extract vignettes according to prediction") {
		ret = runMacro("Zooprocess_sort_vig_prediction",path);
		flag=toString(ret);
		l= lengthOf(flag);
		if (l==1)  { 	showMessage("Error message",op+" process aborted.                       "); 	} // if
	} // else if

	// ------------------"ZooscanUVP_extract_sub_learningset"------------------------------------------------
	else if (op =="ZooscanUVP_extract_sub_learningset") {
		ret = runMacro("ZooscanUVP_extract_sub_learningset");
		flag=toString(ret);
		l= lengthOf(flag);
		if (l==1)  { 	showMessage("Error message",op+" process aborted.                       "); 	} // if
	} // else if

	// ------------------"Load vignette from folders"------------------------------------------------
	else if (op =="Load vignette from folders") {
		ret = runMacro("Zooscan_load_vignette_from_folders",dircruise+" "+dircruise);
		flag=toString(ret);
		l= lengthOf(flag);
		if (l==1)  { 	showMessage("Error message",op+" process aborted.                       "); 	} // if
	} // else if
	
	// ------------------"UVP4_convert_TIF_to_JPG"------------------------------------------------
	else if (op =="UVP4_convert_TIF_to_JPG") {
		ret = runMacro("UVP4_convert_TIF_to_JPG");
		flag=toString(ret);
		l= lengthOf(flag);
		if (l==1)  { 	showMessage("Error message",op+" process aborted.                       "); 	} // if
	} // else if
	
	// ------------------ AUTRE ----------------------
	else {	showMessage("Not a valid tool !");		}// else

	//	showMessage("NORMAL END");
} // while

// --------------------------------------------- FIN ------------------------------------------------------------------------------------------
ret = "UVP process end";
return ret;
