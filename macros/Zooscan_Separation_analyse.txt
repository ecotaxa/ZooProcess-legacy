//--------------------------Zooscan_separation_analyse-----------------------------------
// L'image VIS est OUVERTE, Results est fermee a chaque fois qu''on relance l'analyse des particules (s'il est ouvert !)
version = "8.13";
date = "2022/10/17";

// LOGS
// Wait après ouverture fichiers
// Error message précisé

print("Version= "+version+"_"+date+"_Picheral_CNRS");
run("free memory");

//-------------------INITIALISATION-----------------------------------------
//arg = chemconfig +" "+chem+" "+configfile +" "+ param + " " + titre + " " + sep +" "+ tag +" "+ meta +" "+ par +" "+ maskop +" "+ masktag +" "+ 
//maskpar +" "+chemscan+" "+chemwork1 +" "+savevig+" "+savezip+" "+maskod +" "+ident +" "+maskident +" "+vis+" "+maskvis+" "+scan+" "+resolution+" "+savetag;

arg = getArgument(); 
array = split(arg," ");
//for (i=0;i<array.length;i++) {print("i= ",i," val= ",array[i]); } // for
chemconfig= array[0]; 	chem= array[1]; 		configfile= array[2]; 	param= array[3]; 	titre= array[4]; 
sep= array[5]; 		tag= array[6]; 		meta= array[7];  	par= array[8]; 	maskop= array[9]; 	masktag= array[10];  maskpar= array[11]; 
chemscan= array[12]; 	chemwork1= array[13];	savevig= array[14];	savezip= array[15];	maskod= array[16];	ident= array[17];	maskident= array[18];
vis=array[19];		maskvis= array[20];		scan= array[21];	resolution=array[22];	savetag= array[23];

// Ouverture et chargement des configurations
// Le fichier config est defini (choisi) dans la macro Zooscan_trt_1.txt
openconfig = chemconfig +configfile;
open(openconfig);
wait(200);
config = getInfo();
array = split(config,"\n");
for (i=0; i<array.length; i++)	{
	//print("i= ",i,"  ",array[i]);
	texte = array[i];
	ssarray = split(texte," ");
	array[i] = ssarray[1];
}
calibration = array[2]; 	jpeg = array[3];
zip = array[4];		greycor = array[5];		 // resolution = array[6];		
xminref = array[7];		yminref = array[8];		doyofset = array[9];		doxpos = array[10];	xdimref = array[11];
ydimref =array[12];		dostd = array[13];		doecart = array[14];		subimgx = array[15];	lower = array[16];	upper = array[17];	greyref = array[18];	voxelwidth = array[19];
voxelheigth = array[20];	voxeldepth = array[21];	voxelunit = array[22];		backval = array[23];	minsize = array[24];	maxsize = array[25];	longline = array[26];	doxabspos = array[27];	
doyabspos = array[28];	bleft= array[29];		broll= array[30];		bright= array[31];	contrast= array[32];

//--------------------Impression des donnees du CONFIG--------------------------------
data = "ConfigDataP= ";
for (t=0;t<array.length;t++) { data = data+"+"+array[t];		} // if
print(data);

// ---------------------Fermeure de la fenetre config ---------------------------------------
selectWindow(configfile);
run("Close");
// ---------------------Suppression des info de type de fichier ----------------------------
long = lengthOf(titre);
titrered = substring(titre, 0, long-4);
chemwork = 	chemwork1+titrered+"\\";
chemtemp = 	chem + "Zooscan_temp\\";

print("Resolution= ",resolution);
print("Calibration= ",calibration);
print("Threshold= ",upper);

pixel = 25.4/resolution;
print("PixSize=  ",pixel);

print("MinSize= ",minsize);
print("MaxSize= ",maxsize);

// ----------------------- Arrondi --------------------
mind=parseFloat(minsize);
maxd=parseFloat(maxsize);
if (mind>0.01)  { min = 0.01*(floor(mind*100)); } // if
if (mind>0.1) { min = 0.1*(floor(mind*10)); } // if
if (mind>1) { min = floor(mind); } // if
if (maxd>0.01) 	 { max = 0.01*(round(maxd*100)); } // if
if (maxd>0.1)	 { max = 0.1*(round(maxd*10)); } // if
if (maxd>1)	 { max = round(maxd); } // if
if (maxd>10)	 { max = 10*round(maxd/10); } // if
if (maxd>100)	 { max = 100*round(maxd/100); } // if

print("Method= ","default [",min," - ",max,"]");
Smmin=(3.1416/4)*pow(minsize,2);
Spmin = round(Smmin/(pow(pixel,2)));
Smmax=(3.1416/4)*pow(maxsize,2);
Spmax = round(Smmax/(pow(pixel,2)));
print("Measures_unit= ",voxelunit);
print("Min_Area= ",Spmin);
print("Max_Area= ",Spmax);

//------------------------------------------SEPARATION routine-----------------------------------------------------------
// 	Travail avec le masque de separation
// 	sep=1 : Le masque existe dans _work
// 	maskop=1 : On decide de s'en servir, de le creer ou de le modifier

nbblobs= 0;
crol = 0;
// ------------ Il est necessaire de passer par SEPARATION avant de passer par IDENT SSI sep = 1 -------------------
if (sep==1 && maskident==1 && maskop==0 ) {crol = 1;
	// passer les tests de qualite du sep mais reutiliser SANS CONTROLE comme pour traitement multiple
	maskop=1;
} // if

// ------------------------- Si on a decide de ne pas se servir du masque qu'il existe ou pas -----------------
if (maskop==0 || (param==2 && sep==0) )	{ 
	// ----------------------------- Test existence d'un masque -----------------------------------
	testsep = File.exists(chemwork+titrered+"_sep.gif");
	if (testsep == 1) {	print("Separation_Mask= NOT_REPROCESSED");	} // if
	else { 			print("Separation_Mask= UNUSED");			} //else
	print("Particle_Analysis= YES");
	// ---------------------------- fermeture du RESULTS ------------------------------------------
	test= isOpen("Results");
	if (test==1) { selectWindow("Results");		run("Close");		} // test
	setVoxelSize(voxelwidth,voxelheigth,voxeldepth,voxelunit);
	selectImage("temp_vis1.tif");
	rename(titrered);
	ret = runMacro("Zooscan_Particle_Analysis.txt",arg);
	if (isOpen("Log")== false) {	opentemp = chemtemp +"temp_log.txt";
		open(opentemp);
		wait(200);
		config = getInfo();
		array = split(config,"\n");
		for (i=0; i<array.length; i++)	{	print(array[i]);		} // for
		if (isOpen("Log")) {	selectWindow("temp_log.txt");	run("Close");	}
		else {	showMessage("Log error in Zooscan_Separation_analyse.txt for temp_log.txt");	}
	} // if
	// -------------------------- RESULTS est sauvee pour "securite" dans le repertoire "temp" ---------------------
	selectWindow("Results");
	saveAs("measurements",chemtemp+"measurementsA.txt");
	nbblobs = parseInt(ret);
	if (nbblobs==0) { print("Particle Analysis ABORTED");  		} // if nbblobs
	print("Analysed_Objects= ",nbblobs);
	selectImage(titrered);
	run("Close");
	// ---------------------------- Affichage des RESULTS --------------------------------------------
	updateResults();
} // if
else { 	print("Separation_Mask= INCLUDE");
	openmask= 0;
	// ------------------------ Creation d'un masque vide et sauvegarde --------------------------------------
	if ( sep==0) { // Creation d'un masque vide et sauvegarde
		print("Separation_Mask= CREATE");
		//-------------------CREATION d'un MASQUE de SEPARATION-------------------------------
		largeurcor = getWidth();
		hauteurcor = getHeight();
		newImage("Separation", "8-bit Black", largeurcor,hauteurcor, 1);
		saveAs("Tiff", chemtemp+"temp_sep"); 
		run('Close');
		openmask= 1;
	} // if sep==0
	// ------------------------ Edition du masque si SINGLE treatment, sinon UTILISATION ----------------------
	if (param==1 && crol== 0 ) { 
		check=0; 	// 	Passe a 1 lorsque le masque est OK
		//--------------------------EDITION du masque---------------------------------------
		while (check==0) { 
			// -------------------------- fermeture du RESULTS -----------------------------------
			test= isOpen("Results");
			if (test==1) { selectWindow("Results");		run("Close");		} // test
			//------------------------------------- Combinaison de l'image du masque avec celle des objets --------------------
			selectImage("temp_vis1.tif");
			Haut = getHeight();
			// ------------------ Si LARGE frame, purge memoire ------------------------------------------------
			if (Haut > 12000) {	
				saveAs("Tiff", chemtemp+"temp_vis1.tif");
				close();
				nb = 4; duration = 1000;
				for (i=0; i<nb; i++) {	showStatus("Free memory");	run("free memory");	progress = (i+1)/nb;	showProgress(progress);	wait(duration);	} // for
				open( chemtemp+"temp_vis1.tif");
			} // if
			rename("Zooplankton");
			
			// --------------------Ouverture de l'image du masque -------------------------------------------------
			if (openmask==1) { 	open(chemtemp+"temp_sep.tif"); 	 } // if
			else { open(chemwork+titrered+"_sep.gif");  		saveAs("Tiff", chemtemp+"temp_sep"); 	openmask = 1;	} // else
			rename("Separation");
			// -------------------- Comptage du nombre de traits ------------------------------
			run("Set Measurements...", "area redirect=None decimal=0");
			run("Invert");
			run("Analyze Particles...", "size=0-Infinity circularity=0.00-1.00 show=Nothing display");
			run("Invert");
			updateResults();
			nbblobs = 	nResults;
			if (isOpen("Results")) { selectWindow("Results"); 	run("Close");	} // test
			print("Separation_lines= "+nbblobs);
			
			// ---------------- AJOUT ---------------------------------
			run("Image Calculator...", "image1=Separation operation=Add image2=Zooplankton");
			selectImage("Zooplankton");
			close();
			selectImage("Separation");
			//--------------------On sauve l'image recombinee avec le masque de separation sans fond
			saveAs("Tiff", chemtemp+"temp_vis1.tif"); 
			rename(titrered);
			ret = runMacro("Zooscan_Particle_Analysis.txt",arg);
			ret = toString(ret);
			if (lengthOf(ret)== 1) { showMessage("Zooscan_Particle_Analysis.txt aborted. \n Case #1 \nPress CANCEL to end.");	}
			if (isOpen("Log")== false) {	opentemp = chemtemp +"temp_log.txt";
				open(opentemp);
				wait(200)
				config = getInfo();;
				array = split(config,"\n");
				for (i=0; i<array.length; i++)	{	print(array[i]);		} // for
				selectWindow("temp_log.txt");
				run("Close");
			} // if
			nbblobs = parseInt(ret);
			print("Analysed_Objects= ",nbblobs);
			// --------------------------- Affichage des RESULTS ---------------------------------------------------------------- 
			updateResults();
			//-----------------------AFFICHAGE de l'image AVEC les CONTOURS pour realiser la SEPARATION ----------
			open(chemtemp+"temp_out1.tif"); 
			rename("Contours");
			selectImage(titrered);
			run("Invert");
			rename("Zooplankton");
			run("Image Calculator...", "image1=Contours operation=Add image2=Zooplankton");
			run("Invert");	
			selectImage("Zooplankton");
			close();
			selectImage("Contours");
			rename(titrered);
			setVoxelSize(voxelwidth,voxelheigth,voxeldepth,voxelunit);
			ret = runMacro("Zooscan_dialog_save_contours");
			flagc = parseInt(ret);
			// -------------------------Sauvegarde des contours et du zoo-------------------------
			if (flagc==1) { 	saveAs("zip",chemwork+titrered+"_zoocont");		rename(titrered);		} // if
			// ----------------- Routine de SEPARATION "pure" qui necessite le masque _sep et l'image _vis1 avec les contours --------------
			run("View 100%");
			//--------------------  Si des Tags existent, on trace ceux qui sont a 0 ou a 2 (doublons) ---------------------
			if (tag==1) { arg = runMacro("Zooscan_tag2",arg);			} // if tag==1	
			arg = runMacro("Zooscan_Split.txt",arg);
			flag=toString(arg);
			l= lengthOf(flag);
			saveAs("Tiff",chemtemp+"temp_sep.tif"); 
			openmask = 1;
			if (l==1)  { showMessage("Error message","Zooscan_Split Process aborted !    "); 		} // if
			// Seule l'image _sep reste ouverte
			//--------------------Controle de fin de process du masque--------------------------------------------
			listaff = newArray("YES","EDIT","RESET");
			ret = runMacro("Zooscan_dialog_masq_end_process");
			choice=toString(ret);
			l= lengthOf(choice);
			if (l==1)  { choice = listaff[0];  		} // if
			if (choice==listaff[0]) { // --------------------END--------------------------------
				check = 1;
				// --------------- fermeture du RESULTS --------------------------
				test= isOpen("Results");
				if (test==1) { selectWindow("Results"); 	run("Close");	} // test
				// -------------------- Sortie de la boucle while, fermeture de l'image du zoo et contours en cours
				// -------------------- Sauvegarde de l'image des masques en fond NOIR
				selectImage("temp_sep.tif");
				saveAs("Gif",chemwork+titrered+"_sep");
				rename("Separation");
				// --------------------- RECALCUL des PARTICULES avec le masque
				open(chemtemp+"temp_vis1.tif"); 
				rename("Zooplankton");
				// ------------------------ Combinaison de l'image du masque avec celle des objets
				run("Image Calculator...", "image1=Separation operation=Add image2=Zooplankton");
				selectImage("Zooplankton");
				close();
				selectImage("Separation");
				// ----------------------------- On sauve l'image recombinee avec le masque de separation sans fond
				saveAs("zip",chemwork+titrered+"_vis1");
				saveAs("Tiff",chemtemp+"temp_vis1");
				rename(titrered);
				ret = runMacro("Zooscan_Particle_Analysis.txt",arg);
				ret = toString(ret);
				if (lengthOf(ret)== 1) { showMessage("Zooscan_Particle_Analysis.txt aborted. \n Case #2 \nPress CANCEL to end.");	}
				if (isOpen("Log")== false) {	opentemp = chemtemp +"temp_log.txt";
					open(opentemp);
					wait(200);
					config = getInfo();
					array = split(config,"\n");
					for (i=0; i<array.length; i++)	{	print(array[i]);		} // for
					selectWindow("temp_log.txt");
					run("Close");
				} // if
				nbblobs = parseInt(ret);
//				if (nbblobs==0) { print("Particle Analysis ABORTED");     } // if flag
				print("Analysed_Objects= ",nbblobs);
				selectImage(titrered);
				run("Close");
				// Affichage des RESULTS....
				updateResults();
			} // if choice 
			else if (choice==listaff[1]) { // ---------------------------Edition du meme masque-------------------------
				selectWindow("Results");
				run("Close");
				selectImage("temp_sep.tif");
				saveAs("Gif",chemwork+titrered+"_sep");
				close();
				open(chemtemp+"temp_vis1.tif"); 
			} // else if
			else if (choice==listaff[2])	{ //--------------------------RESET--------------------------------------
				print("Separation_Mask= RESET");
				// ---------------------- Fermeture de l'image du zoo et separation en cours
				selectImage("temp_sep.tif");
				run("Close");
				//--------------------Sauvegarde temporaire du log-----------------------
				if (isOpen("Log")) {	selectWindow("Log");
					sauve = "save=" + chemtemp + "temp_log.txt";
					run("Text...",sauve);
					run("Close");
				}
				else {	showMessage("Log error in Zooscan_Separation_analyse.txt for temp_log.txt");	}
				
				// ----------------------On calcule une nouvelle image VIS avec la routine asep....
				runMacro("Zooscan_1asep",arg);
				//--------------------Recuperation du log-----------------------
				// ------------------- Effacement de la fenetre LOG
				print("A purger");		selectWindow("Log");		run("Close");
				opentemp = chemtemp +"temp_log.txt";
				open(opentemp);
				wait(200);
				config = getInfo();
				array = split(config,"\n");
				for (i=0; i<array.length; i++)	{	print(array[i]);			} // for
				selectWindow("temp_log.txt");
				run("Close");
				//-------------------CREATION d'un MASQUE de SEPARATION VIDE-------------------------------
				// Creation de l'image pour sauvegarde et traitement.
				largeurcor = getWidth();
				hauteurcor = getHeight();
				newImage("Separation", "8-bit Black", largeurcor,hauteurcor, 1);
				// --------------------- Sauvegarde de l'image des masques avec fond NOIR
				saveAs("Gif",chemwork+titrered+"_sep");	
				saveAs("Tiff", chemtemp+"temp_sep.tif"); 
				run("Close");
			} // else if choice	
		} // while check
	} // if param==1
	else if (param==2 || crol==1 ) { //--------------------------------on reprend le masque existant PAS de CONTROLE du MASQUE
		// --------------- fermeture du RESULTS ------------------------
		res = isOpen("Results");
		if (res== 1) { selectWindow("Results");		run("Close");		} // if
		// --------------------- Il faut alors faire une analyse des particules en utilisant le masque existant ou que l'on vient de creer
		selectImage("temp_vis1.tif");
		Haut = getHeight();
		// ------------------ Si LARGE frame, purge memoire ------------------------------------------------
		if (Haut > 12000) {			
			saveAs("Tiff", chemtemp+"temp_vis1.tif");
			close();
			nb = 4; duration = 1000;
			for (i=0; i<nb; i++) {	showStatus("Free memory");	run("free memory");	progress = (i+1)/nb;	showProgress(progress);	wait(duration);	} // for
			open( chemtemp+"temp_vis1.tif");
		} // if
		rename("Zooplankton");
		// ------------------------ Ouverture de l'image du masque
		open(chemwork+titrered+"_sep.gif");
		//	saveAs("Tiff", chemtemp+"temp_sep.tif"); 
		rename("Separation");
		// -------------------- Comptage du nombre de traits ------------------------------
		run("Set Measurements...", "area redirect=None decimal=0");
		run("Invert");
		run("Analyze Particles...", "size=0-Infinity circularity=0.00-1.00 show=Nothing display");
		run("Invert");
		updateResults();
		nbblobs = 	nResults;
		if (isOpen("Results")) { selectWindow("Results"); 	run("Close");	} // test
		print("Separation_lines= "+nbblobs);
		
		// -------------------------Combinaison de l'image du masque avec celle des objets
		run("Image Calculator...", "image1=Separation operation=Add image2=Zooplankton");
		selectImage("Zooplankton");
		close();
		selectImage("Separation");	
		// ------------------------- On sauve l'image recombinee avec le masque de separation
		saveAs("Tiff", chemtemp+"temp_vis1.tif");
		saveAs("zip",chemwork+titrered+"_vis1");
		rename(titrered);
		ret = runMacro("Zooscan_Particle_Analysis.txt",arg);
		ret = toString(ret);
		if (lengthOf(ret)== 1) { showMessage("Zooscan_Particle_Analysis.txt aborted. \n Case #3 \nPress CANCEL to end.");	}
		if (isOpen("Log")== false) {	opentemp = chemtemp +"temp_log.txt";
			open(opentemp);
			wait(200);
			config = getInfo();
			array = split(config,"\n");
			for (i=0; i<array.length; i++)	{	print(array[i]);		} // for
			selectWindow("temp_log.txt");
			run("Close");
		} // if
		nbblobs = parseInt(ret);
//		if (nbblobs==0) { print("Particle Analysis ABORTED"); 		} // if flag
		print("Analysed_Objects= ",nbblobs);
		val = isOpen(titrered);
		if (val==1) { 	selectImage(titrered);		run("Close");		} // if val
		// ---------------------------- RESULTS reste OUVERT
	} // param==2
} // else maskop

//----------------------------SAUVEGARDE RESULTATS---------------------------------------------
// La fenetre RESULTS n'est PAS fermee car on va travailler avec pour les TAG. 
// Elle est sauvee pour "securite" dans le repertoire "temp"
if (isOpen("Results")) {selectWindow("Results"); saveAs("measurements",chemtemp+"measurementsB.txt");	} // if
wait(1000);

// ---------------------------- Sauvegarde du LOG -----------------------------------------------------
if (isOpen("Log")) {	selectWindow("Log");	sauve = "save=" + chemwork + titrered + "_log.txt";	run("Text...",sauve);	}
else {	showMessage("Log error in Zooscan_Separation_analyse.txt for "+titrered + "_log.txt \n \nThe Log window is not open !");	}

// ---------------------------- FIN ---------------------------------------------------------------------------
ret = arg;
return ret;
