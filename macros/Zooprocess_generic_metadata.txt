// -------------------------Zooprocess_generic_metadata --------------------
version = "7.40	";
date = "2020/12/15";

// Option Octopus
// Format LAT/LON
// Octopus devient UVP6
// Update ALL
// EDIT (inclus maintenant PID et TSV)

arg = getArgument();
array = split(arg, " ");
instrum = array[0];
option = array[1];
path = array[2];
//aa = getBoolean(option);
maxgg = 100000;
paramlist = "project;ship;filename;sampleid;genericreffile;latitude;longitude;samplinggear;zmin;zmax;volconc;magnification;celltype;instrumtype;comment;datetime";
// ----------------- Metafile pour Generic --------------------------------	
filelist = getFileList(path + "\\meta\\");

//--------------- Selection des fichiers  -------------------
j = 0;
list = newArray(filelist.length);
for (i = 0; i < filelist.length; i++) {
    ctrl = endsWith(filelist[i], ".txt");
    ctrl1 = startsWith(filelist[i], "Generic_header_");
    if (ctrl == 1 && ctrl1 == 1) {
        rr = filelist[i];
        list[j] = rr;
        j = j + 1;
    } // if
} // for	
//---------------------Test de la presence de fichiers dans le repertoire-----------------------------------------------------------------------	
if (j == 0) {
    configpres = 0;
    // getBoolean("No metadata file in the selected project. \nPress YES to create a file and add a profile !          ");
    option = "create";
} //
else if (j == 1) {
    metafile = list[0];
} // else if
else {
    configpres = 1;
    // ---------------------Purger les fichiers vides de la liste ! -------------------------------------
    listaff = newArray(j);
    for (i = 0; i < listaff.length; i++) {
        rr = list[i];
        listaff[i] = rr;
    } // for
    Dialog.create("METADATA FILE          version : " + version);
    Dialog.addMessage("--------------------------------------------------------------------------------   ");
    Dialog.addMessage("Project :  " + path);
    Dialog.addMessage("--------------------------------------------------------------------------------   ");
    message = "SELECT Metadata FILE to COMPLETE             ";
    Dialog.addMessage(message);
    Dialog.addChoice("       ", listaff);
    Dialog.show();
    metafile = Dialog.getChoice();
} // else

long = lengthOf(path);
a = indexOf(path, "_");
Project = substring(path, a + 1, long);

print("A purger");
selectWindow("Log");
run('Close');
// ------------------ CREATE empty -----------------
if (option == "create") {
    print(paramlist);
    metafile = "Generic_header_" + Project + ".txt";
    sauve = "save=" + path + "\\meta\\" + metafile;
    selectWindow("Log");
    run("Text...", sauve);
    run('Close');
} // 

// ----------------------------- ADD EDIT ----------------------------------
open(path + "\\meta\\" + metafile);
wait(100);
metadata = getInfo();
run('Close');
array = split(metadata, "\n");
arrayrec = split(metadata, "\n");
liste = newArray(array.length);
// ---------------------- metadata -------------------------------------------
project = newArray(array.length);
ship = newArray(array.length);
filename = newArray(array.length);
stationname = newArray(array.length);
genericreffile = newArray(array.length);
latitude = newArray(array.length);
longitude = newArray(array.length);
samplinggear = newArray(array.length);
zmin = newArray(array.length);
zmax = newArray(array.length);
volconc = newArray(array.length);
magnification = newArray(array.length);
lens = newArray(array.length);
imagesurf = newArray(array.length);
celltype = newArray(array.length);
instrumtype = newArray(array.length);
freqimage = newArray(array.length);
duration = newArray(array.length);
stopcriteria = newArray(array.length);
comment = newArray(array.length);
datetime = newArray(array.length);
stationdone = newArray(maxgg);
nbstationdone = array.length;

// ---------------- Valeurs initiales -----------------------------
Cruise = "PointB";
Ship = "Sagitta";
Ffilename = 00;
Stationname = "xx";
Genericreffile = "xx";
Latitude = 0;
Longitude = 0;
Samplinggear = "Niskin";
Zmin = 0;
Zmax = 0;
Volconc = 1;
Magnification = 1;
Celltype = "xx";
Instrumtype = "xx";
Comment = "xx";
Datetime = "20000101-1200";
print(array[0]);

if (option != "create") {
    for (i = 1; i < array.length; i++) {
        // ----------------- Impression des premieres lignes -----------------
        print(array[i]);
        ligne = replace(array[i], ";", " ");
        //		aa = getBoolean(array.length + "  "+i+"   "+ligne);
        ligne = split(ligne, "\ ");
        Project = ligne[0];
        Ship = ligne[1];
        Filename = ligne[2];
        Stationname = ligne[3];
        Genericreffile = ligne[4];
        Latitude = ligne[5];
        Longitude = ligne[6];
        Samplinggear = ligne[7];
        Zmin = ligne[8];
        Zmax = ligne[9];
        Volconc = ligne[10];
        Magnification = ligne[11];
        Celltype = ligne[12];
        Instrumtype = ligne[13];
        Comment = ligne[14];
        if (ligne.length == 15) {
            Datetime = "20000101_1200";
        } // if
        else {
            Datetime = ligne[15];
        } // else
        project[i] = Project;
        ship[i] = Ship;
        filename[i] = Filename;
        stationname[i] = Stationname;
        genericreffile[i] = Genericreffile;
        latitude[i] = Latitude;
        longitude[i] = Longitude;
        samplinggear[i] = Samplinggear;
        zmin[i] = Zmin;
        zmax[i] = Zmax;
        volconc[i] = Volconc;
        magnification[i] = Magnification;
        celltype[i] = Celltype;
        instrumtype[i] = Instrumtype;
        comment[i] = Comment;
        datetime[i] = Datetime;
        stationdone[i] = Stationname;
        liste[i - 1] = Filename + " " + Stationname;
    } // for
} // if

// ------------------------ UPDATE ALL ------------------------------------------
if (option == "update_all") {
    message = "UPDATED Files : \n";
    field = arrayrec[0];
    field = replace(field, ";", " ");
    field = split(field, " ");
    for (pp = 1; pp < array.length; pp++) {
        ligne = replace(array[pp], ";", " ");
        //		aa = getBoolean(pp+"    "+ligne);
        ligne = split(ligne, "\ ");
        Project = ligne[0];
        Ship = ligne[1];
        Filename = ligne[2];
        Stationname = ligne[3];
        Genericreffile = ligne[4];
        Latitude = ligne[5];
        Longitude = ligne[6];
        Samplinggear = ligne[7];
        Zmin = ligne[8];
        Zmax = ligne[9];
        Volconc = ligne[10];
        Magnification = ligne[11];
        Celltype = ligne[12];
        Instrumtype = ligne[13];
        Comment = ligne[14];
        if (ligne.length == 15) {
            Datetime = "20000101_1200";
        } // if
        else {
            Datetime = ligne[15];
        } // else

        // ---------------- Sauvegarde fichier individuel dans repertoire profil ---------------
        if (isOpen("Log")) {
            selectWindow("Log");
            run("Close");
        } // if
        pathprofile = path + "\\work\\" + Stationname + "\\";
        print(paramlist);
        datatext = Project + ";" + Ship + ";" + Filename + ";" + Stationname + ";" + Genericreffile + ";" + Latitude + ";" + Longitude + ";" + Samplinggear + ";" + Zmin + ";" + Zmax + ";" + Volconc + ";" + Magnification + ";" + Celltype + ";" + Instrumtype + ";" + Comment + ";" + Datetime;

        print(datatext);
        sauve = "save=" + pathprofile + Stationname + "_meta.txt";
        selectWindow("Log");
        run("Text...", sauve);
        run('Close');
        message = message + pathprofile + Stationname + "_meta.txt" + "\n";

        // ---------------------- Mise � jour des donn�es dans l'architecture projet -----------                                               
        pidfile = Stationname + "_dat1.pid";
        dat1file = Stationname + "_dat1.txt";
        pathworksample = path + "\\" + "\\work\\" + Stationname + "\\";
        pathresults = path + "\\" + "\\results";
        pathpidresults = path + "\\" + "\\PID_process\\" + "\\Pid_results\\";
        pathpidpredicted = path + "\\" + "\\PID_process\\" + "\\Pid_results\\" + "\\Pid_predicted\\";
        pathdat1validatted = path + "\\" + "\\PID_process\\" + "\\Pid_results\\" + "\\Dat1_validated\\";
        // ---------------------- Fichiers PID -----------------------------------------------------------
        data = replace(datatext, ";", " ");
        datameta = split(data, " ");

        // --------------------- SSI PID existe ----------------------------------------------------------
        if (File.exists(pathworksample + pidfile)) {
            if (isOpen("Log")) {
                selectWindow("Log");
                run("Close");
            } // if
            open(pathworksample + pidfile);
            wait(100);
            data = getInfo();

            run('Close');
            data = split(data, "\n");
            summaryligne = 0;
            //			array = split(data,"\n");
            for (p = 0; p < data.length; p++) {
                dataligne = data[p];
                if (dataligne == "[Process]") summaryligne = p;
                if (dataligne == "[Data]" && summaryligne == 0) summaryligne = p;
            } // for
            // ---------------- Debut -------------------------------------------------------------	
            print("PID");
            print(" ");
            // ---------------- Metadata ---------------------------------------------------------
            print("[Metadata]");
            for (t = 0; t < datameta.length; t++) {
                print(field[t] + "= " + datameta[t]);
            } // for
            print(" ");
            // ---------------- Suite ----------------------------------------------------------------
            for (p = summaryligne; p < data.length; p++) {
                print(data[p]);
            } // for
            // ---------------- PID dans WORK SAMPLE --------------------------------------------------
            sauve = "save=" + pathworksample + pidfile;
            selectWindow("Log");
            run("Text...", sauve);
            // ------------ Ecotaxa settings ------------------
            oo = indexOf(pidfile, ".");
            pid_file = substring(pidfile, 0, oo - 5);
            status = false;
            process_opt = "pid";
            outlines = false;
            // ---------------- PID dans RESULTS --------------------------------------------------
            if (File.exists(pathresults + pidfile)) {
                sauve = "save=" + pathresults + pidfile;
                selectWindow("Log");
                run("Text...", sauve);
            } // if
            // ---------------- PID dans PID RESULTS --------------------------------------------------
            if (File.exists(pathpidresults + pidfile)) {
                sauve = "save=" + pathpidresults + pidfile;
                selectWindow("Log");
                run("Text...", sauve);
            } // if
            // ---------------- PID dans PREDICTED --------------------------------------------------
            if (File.exists(pathpidpredicted + pidfile)) {
                sauve = "save=" + pathpidpredicted + pidfile;
                selectWindow("Log");
                run("Text...", sauve);
            } // if
            run('Close');
            // --------------------- ECOTAXA --------------------------------------------
            macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic", path + " " + pathworksample + " " + pid_file + "_dat1.pid " + process_opt + " " + outlines + " " + status + " maj http://www.zooscan.obs-vlfr.fr//");
            if (macro_flag == "ok") message = message + pathworksample + "ecotaxa_" + pid_file + ".tsv" + "\n";
            if (File.exists(pathresults + pidfile)) {
                macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic", path + " " + pathresults + " " + pid_file + "_dat1.pid " + process_opt + " " + outlines + " " + status + " maj http://www.zooscan.obs-vlfr.fr//");
                if (macro_flag == "ok") message = message + pathresults + "ecotaxa_" + pid_file + ".tsv" + "\n";
            }
            if (File.exists(pathpidresults + pidfile)) {
                macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic", path + " " + pathpidresults + " " + pid_file + "_dat1.pid " + process_opt + " " + outlines + " " + status + " maj http://www.zooscan.obs-vlfr.fr//");
                if (macro_flag == "ok") message = message + pathpidresults + "ecotaxa_" + pid_file + ".tsv" + "\n";
            }
            if (File.exists(pathpidpredicted + pidfile)) {
                macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic", path + " " + pathpidpredicted + " " + pid_file + "_dat1.pid " + process_opt + " " + outlines + " " + status + " maj http://www.zooscan.obs-vlfr.fr//");
                if (macro_flag == "ok") message = message + pathpidpredicted + "ecotaxa_" + pid_file + ".tsv" + "\n";
            }
        } // if exists
        // ---------------------- Fichiers DAT1.TXT -----------------------------------------------------------
        if (File.exists(pathdat1validatted + dat1file)) {
            if (isOpen("Log")) {
                selectWindow("Log");
                run("Close");
            } // if
            open(pathdat1validatted + dat1file);
            wait(100);
            data = getInfo();
            run('Close');
            data = split(data, "\n");
            // ---------------- Debut -------------------------------------------------------------	
            print("PID");
            print(" ");
            // ---------------- Metatdata ---------------------------------------------------------
            print("[Metadata]");
            for (t = 0; t < datameta.length; t++) {
                print(field[t] + "= " + datameta[t]);
            } // for
            print(" ");
            // ---------------- Suite ----------------------------------------------------------------
            for (p = summaryligne; p < data.length; p++) {
                print(data[p]);
            } // for
            // ---------------- PID dans PREDICTED --------------------------------------------------
            sauve = "save=" + pathdat1validatted + dat1file;
            selectWindow("Log");
            run("Text...", sauve);
            run('Close');
            // ------------ Ecotaxa ------------------
            //				pid_file = substring(pidfile,0,oo-5);
            status = false;
            process_opt = "text";
            outlines = false;
            ret_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic", path + " " + pathdat1validatted + " " + pid_file + "_dat1.txt " + process_opt + " " + outlines + " " + status + " maj");
            if (lengthOf(toString(ret_flag)) > 1) {
                if (ret_flag == "ok") {
                    message = message + path + "\\ecotaxa\\" + pid_file + "\\ecotaxa_" + pid_file + ".tsv" + "\n";
                }
            }
        } // if exists
    } // for
    showMessage("WARNING", message);
} // update_all

// -------------------- EDIT -----------------------------------------------------------------
else if (option == "edit") {
    end = 1;
    while (end == 1) {
        Dialog.create("Sample selector        version : " + version);
        Dialog.addMessage("-----------------------------------------------------------------------------------------------------------------------------------------------");
        Dialog.addMessage("Project :  " + path);
        Dialog.addMessage("Metadatafile = " + metafile);
        Dialog.addMessage("-----------------------------------------------------------------------------------------------------------------------------------------------");
        Dialog.addMessage("     Filename   Sample Id   ");
        Dialog.addChoice("       ", liste);
        Dialog.addMessage("-----------------------------------------------------------------------------------------------------------------------------------------------");
        Dialog.show();
        profile = Dialog.getChoice();
        profile = split(profile, "\ ");
        Filenamesel = profile[0];
        Sample_idsel = profile[1];
        index = 0;
        for (i = 1; i < array.length; i++) {
            // ----------------- D�tection de la ligne � corriger -----------------
            ligne = replace(array[i], ";", " ");
            ligne = split(ligne, "\ ");
            Filename = ligne[3];
            if (Filenamesel == Filename) index = i;
        } // for
        ligne = replace(array[index], ";", " ");
        ligne = split(ligne, "\ ");

        Project = ligne[0];
        Ship = ligne[1];
        Filename = ligne[2];
        Stationname = ligne[3];
        Genericreffile = ligne[4];
        Latitude = ligne[5];
        Longitude = ligne[6];
        Samplinggear = ligne[7];
        Zmin = ligne[8];
        Zmax = ligne[9];
        Volconc = ligne[10];
        Magnification = ligne[11];
        Celltype = ligne[12];
        Instrumtype = ligne[13];
        Comment = ligne[14];
        if (ligne.length == 15) {
            Datetime = "20000101_1200";
        } // if
        else {
            Datetime = ligne[15];
        } // else
        project[index] = Project;
        ship[index] = Ship;
        filename[index] = Filename;
        stationname[index] = Stationname;
        genericreffile[index] = Genericreffile;
        latitude[index] = Latitude;
        longitude[index] = Longitude;
        samplinggear[index] = Samplinggear;
        zmin[index] = Zmin;
        zmax[index] = Zmax;
        volconc[index] = Volconc;
        magnification[index] = Magnification;
        celltype[index] = Celltype;
        instrumtype[index] = Instrumtype;
        comment[index] = Comment;
        datetime[index] = Datetime;
        stationdone[index] = Stationname;

        check = 1;
        // ------------------------------------------- SAISIE des DONNEES -----------------------------------------------------------------------------------
        while (check == 1) {
            check = 0;
            message = "Warning : \n";
            Dialog.create("METADATA    ");
            Dialog.addMessage("------------------------------------------------------------------------------------------------------------------------");
            Dialog.addMessage("Filename =                   " + Filename);
            Dialog.addMessage("------------------------------------------------------------------------------------------------------------------------");
            Dialog.addString("Project ", Project);
            Dialog.addString("Ship ", Ship);
            //		Dialog.addString("Sample Id (must start with alphanumeric characters) ",Filename);
            Dialog.addString("Station Id ", Genericreffile);
            Dialog.addString("Sampling date (YYYYMMDD-HHMM) ", Datetime);
            Dialog.addMessage("-------------------------------------------------------------------------------------------------------------------------------------------------------");
            LATITUDE = parseFloat(latitude[index]);
            latitude_ns = newArray("N", "S");
            if (LATITUDE < 0) {
                latitude_ns = newArray("S", "N");
            }
            LATITUDE = abs(LATITUDE);
            latitude_deg = floor(LATITUDE);
            latitude_min = 100 * (LATITUDE - latitude_deg);
            Dialog.addNumber("LATITUDE (degree) ", latitude_deg);
            Dialog.addNumber("LATITUDE (minute) ", latitude_min);
            Dialog.addChoice("LATITUDE (N/S)    ", latitude_ns);

            LONGITUDE = parseFloat(longitude[index]);
            longitude_ew = newArray("E", "W");
            if (LONGITUDE < 0) {
                longitude_ew = newArray("W", "E");
            }
            LONGITUDE = abs(LONGITUDE);
            longitude_deg = floor(LONGITUDE);
            longitude_min = 100 * (LONGITUDE - longitude_deg);
            Dialog.addNumber("LONGITUDE (degree) ", longitude_deg);
            Dialog.addNumber("LONGITUDE (minute) ", longitude_min);
            Dialog.addChoice("LONGITUDE (E/W)    ", longitude_ew);
            Dialog.addMessage("-------------------------------------------------------------------------------------------------------------------------------------------------------");

            gear = samplinggear[index];
            aff = newArray(gear, "Niskin", "Bucket", "Net", "Continuous", "Multicorer", "ISIIS", "uvp6");
            aff[0] = Samplinggear;
            Dialog.addChoice("Sampling gear       ", aff);
            Dialog.addNumber("Zmin (m) ", zmin[index]);
            Dialog.addNumber("Zmax (m) ", zmax[index]);
            Dialog.addNumber("Concentrated water volume (ml) ", volconc[index]);
            Dialog.addNumber("         Magnification ", magnification[index]);
            Dialog.addString("Cell type       ", celltype[index]);
            Dialog.addString("Imaging device ", instrumtype[index]);
            Dialog.addString("Comment ", comment[index]);
            Dialog.addMessage("------------------------------------------------------------------------------------------------------------------------");
            Dialog.show;

            Project = Dialog.getString();
            a = lengthOf(Project);
            if (a == 0) {
                message = message + "Project empty \n";
                check = 1;
            } // if
            ind = indexOf(Project, " ");
            if (ind != -1) {
                Project = replace(Project, " ", "_");
            }

            Ship = Dialog.getString();
            a = lengthOf(Ship);
            if (a == 0) {
                message = message + "Zooscan Operator empty \n";
                check = 1;
            } // if
            ind = indexOf(Ship, " ");
            if (ind != -1) {
                Ship = replace(Ship, " ", "_");
            }

            /*		Stationname = Dialog.getString();
            // ------------------------------- Verifier si n'existe pas deja -----------------------------------------------------------------------------------
            for (h = 1;h< nbstationdone;h++) {
            //							print(Stationname+"  "+stationdone[h]);
            if (Stationname == stationdone[h]) { message = message+ "Sample Id allready used \n";		check = 1;	} // if
            } // while
            stationdone[h] = Stationname;
            a= lengthOf(Stationname);
            if (a==0) {message = message+ "Sample Id empty \n";		check = 1;		} // if
            ind= indexOf(Stationname," ");
            if (ind != -1) { Stationname = replace(Stationname," ","_"); 					 }
            */
            Genericreffile = Dialog.getString();
            a = lengthOf(Comment);
            if (a == 0) {
                Genericreffile = "no";
            } // if
            ind = indexOf(Genericreffile, " ");
            if (ind != -1) {
                Genericreffile = replace(Genericreffile, " ", "_");
            }
            Genericreffile = replace(Genericreffile, ";", "_");

            Datetime = Dialog.getString();
            a = lengthOf(Datetime);
            if (a == 0) {
                message = message + "Date empty \n";
                check = 1;
            } // if
            if (a != 13) {
                message = message + "Date incorrect \n";
                check = 1;
            } // if
            ind = indexOf(Datetime, " ");
            if (ind != -1) {
                Datetime = replace(Datetime, " ", "-");
            }

            latitude_deg = Dialog.getNumber();
            if (indexOf(toString(latitude_deg), ".") >= 0) {
                message = message + "Latitude (degree) is not an integer \n ";
                check = 1;
            }
            if (latitude_deg > 90) {
                message = message + "Latitude (degree) > 90 \n ";
                check = 1;
            }
            if (latitude_deg < 0) {
                message = message + "Latitude (degree) must not be signed \n ";
                check = 1;
            }

            latitude_min = Dialog.getNumber();
            if (latitude_min > 60) {
                message = message + "Latitude (minute) > 60 \n ";
                check = 1;
            }
            if (latitude_min > floor(latitude_min)) {
                aa = toString(latitude_min, 5);
                data = split(aa, ".");
                aaa = data[0];
                if (lengthOf(aaa) == 1) {
                    latitude_min = "0" + aaa + data[1];
                } else {
                    latitude_min = aaa + data[1];
                }
            } // if
            Latitude = toString(latitude_deg) + "." + latitude_min;

            latitude_ns = Dialog.getChoice();
            if (latitude_ns == "S") Latitude = "-" + Latitude;

            longitude_deg = Dialog.getNumber();
            if (indexOf(toString(longitude_deg), ".") >= 0) {
                message = message + "Longitude (degree) is not an integer \n ";
                check = 1;
            }
            if (longitude_deg > 180) {
                message = message + "Longitude (degree) > 180 \n ";
                check = 1;
            }
            if (longitude_deg < 0) {
                message = message + "Longitude (degree) must not be signed \n ";
                check = 1;
            }

            longitude_min = Dialog.getNumber();
            if (longitude_min > 60) {
                message = message + "Latitude (minute) > 60 \n ";
                check = 1;
            }
            if (longitude_min > floor(longitude_min)) {
                aa = toString(longitude_min, 5);
                data = split(aa, ".");
                aaa = data[0];
                if (lengthOf(aaa) == 1) {
                    longitude_min = "0" + aaa + data[1];
                } else {
                    longitude_min = aaa + data[1];
                }
            } // if
            Longitude = toString(longitude_deg) + "." + longitude_min;

            longitude_ew = Dialog.getChoice();
            if (longitude_ew == "W") Longitude = "-" + Longitude;
            Samplinggear = Dialog.getChoice();

            Zmin = Dialog.getNumber();

            Zmax = Dialog.getNumber();
            if (Zmax < Zmin) {
                message = message + "Zmin > Zmax !   \n  ";
                check = 1;
            } // if

            Volconc = Dialog.getNumber();
            if (Volconc < 0) {
                message = message + "Concentrated water volume (ml) < 0 !   \n  ";
                check = 1;
            } // if
            if (Volconc == 0) {
                message = message + "''Concentrated water volume (ml)'' is not a number  or set to 0   \n  ";
                check = 1;
            } // if

            Magnification = Dialog.getNumber();
            if (Magnification < 0) {
                message = message + "Magnification < 0 !   \n  ";
                check = 1;
            } // if
            if (Magnification == 0) {
                message = message + "''Magnification'' is not a number  or set to 0   \n  ";
                check = 1;
            } // if

            Celltype = Dialog.getString();
            Celltype = replace(Celltype, ";", "_");

            Instrumtype = Dialog.getString();
            Instrumtype = replace(Instrumtype, ";", "_");
            Comment = Dialog.getString();
            a = lengthOf(Comment);
            if (a == 0) {
                Comment = "no";
            } // if
            ind = indexOf(Comment, " ");
            if (ind != -1) {
                Comment = replace(Comment, " ", "_");
            }
            Comment = replace(Comment, ";", "_");

            // --------------- WARNING ---------------
            if (check == 1) {
                message = message + " \nEnter values again              ";
                showMessage(message);
            } // if	
            else { // ------------------------ Recuperation des donnees existantes ---------------------------------------
                open(path + "\\meta\\" + metafile);
                wait(100);
                metadata = getInfo();
                run('Close');
                DATA = split(metadata, "\n");
                // ---------------- Message ---------------------------------------------------------------------
                message = "Files modified : \n";

                // ----------------- Impression des premieres lignes -----------------
                if (isOpen("Log")) {
                    selectWindow("Log");
                    run("Close");
                } // if
                for (b = 0; b < index; b++) {
                    print(DATA[b]);
                } // for

                // ----------------- Ajout de la ligne -------------------------------------
                Filename = toString(Filename);
                Project = toLowerCase(Project);
                Ship = toLowerCase(Ship);
                Stationname = toLowerCase(Stationname);
                Comment = toLowerCase(Comment);
                print(Project + ";" + Ship + ";" + Filename + ";" + Stationname + ";" + Genericreffile + ";" + Latitude + ";" + Longitude + ";" + Samplinggear + ";" + Zmin + ";" + Zmax + ";" + Volconc + ";" + Magnification + ";" + Celltype + ";" + Instrumtype + ";" + Comment + ";" + Datetime);

                // ---------------- Impression lignes suivantes ------------------------------
                for (b = index + 1; b < DATA.length; b++) {
                    print(DATA[b]);
                } // for

                // ---------------- Sauvegarde Generic_header---------------------------------
                sauve = "save=" + path + "\\meta\\" + metafile;
                selectWindow("Log");
                run("Text...", sauve);
                run('Close');

                // ---------------- Creation repertoire profil -------------------------------------------------
                pathprofile = path + "\\work\\" + Stationname + "\\";
                File.makeDirectory(pathprofile);

                // ---------------- Sauvegarde fichier individuel dans repertoire profil ---------------
                if (isOpen("Log")) {
                    selectWindow("Log");
                    run("Close");
                } // if
                pathprofile = path + "\\work\\" + Stationname + "\\";
                print(paramlist);
                datatext = Project + ";" + Ship + ";" + Filename + ";" + Stationname + ";" + Genericreffile + ";" + Latitude + ";" + Longitude + ";" + Samplinggear + ";" + Zmin + ";" + Zmax + ";" + Volconc + ";" + Magnification + ";" + Celltype + ";" + Instrumtype + ";" + Comment + ";" + Datetime;

                print(datatext);
                sauve = "save=" + pathprofile + Stationname + "_meta.txt";
                selectWindow("Log");
                run("Text...", sauve);
                run('Close');
                message = message + pathprofile + Stationname + "_meta.txt" + "\n";

                // ---------------------- Mise � jour des donn�es dans l'architecture projet -----------                                               
                pidfile = Stationname + "_dat1.pid";
                dat1file = Stationname + "_dat1.txt";
                pathworksample = path + "\\" + "\\work\\" + Stationname + "\\";
                pathresults = path + "\\" + "\\results";
                pathpidresults = path + "\\" + "\\PID_process\\" + "\\Pid_results\\";
                pathpidpredicted = path + "\\" + "\\PID_process\\" + "\\Pid_results\\" + "\\Pid_predicted\\";
                pathdat1validatted = path + "\\" + "\\PID_process\\" + "\\Pid_results\\" + "\\Dat1_validated\\";
                // ---------------------- Fichiers PID -----------------------------------------------------------
                data = replace(datatext, ";", " ");
                datameta = split(data, " ");
                field = arrayrec[0];
                field = replace(field, ";", " ");
                field = split(field, " ");

                // --------------------- SSI PID existe ----------------------------------------------------------
                if (File.exists(pathworksample + pidfile)) {
                    if (isOpen("Log")) {
                        selectWindow("Log");
                        run("Close");
                    } // if
                    open(pathworksample + pidfile);
                    wait(100);
                    data = getInfo();

                    run('Close');
                    data = split(data, "\n");
                    summaryligne = 0;
                    //			array = split(data,"\n");
                    for (p = 0; p < data.length; p++) {
                        dataligne = data[p];
                        if (dataligne == "[Process]") summaryligne = p;
                        if (dataligne == "[Data]" && summaryligne == 0) summaryligne = p;
                    } // for
                    // ---------------- Debut -------------------------------------------------------------	
                    print("PID");
                    print(" ");
                    // ---------------- Metadata ---------------------------------------------------------
                    print("[Metadata]");
                    for (t = 0; t < datameta.length; t++) {
                        print(field[t] + "= " + datameta[t]);
                    } // for
                    print(" ");
                    // ---------------- Suite ----------------------------------------------------------------
                    for (p = summaryligne; p < data.length; p++) {
                        print(data[p]);
                    } // for
                    // ---------------- PID dans WORK SAMPLE --------------------------------------------------
                    sauve = "save=" + pathworksample + pidfile;
                    selectWindow("Log");
                    run("Text...", sauve);
                    message = message + pathworksample + pidfile + "\n";

                    // ------------ Ecotaxa settings ------------------
                    oo = indexOf(pidfile, ".");
                    pid_file = substring(pidfile, 0, oo - 5);
                    status = false;
                    process_opt = "pid";
                    outlines = false;
                    // ---------------- PID dans RESULTS --------------------------------------------------
                    if (File.exists(pathresults + pidfile)) {
                        sauve = "save=" + pathresults + pidfile;
                        selectWindow("Log");
                        run("Text...", sauve);
                        message = message + pathresults + pidfile + "\n";
                    } // if
                    // ---------------- PID dans PID RESULTS --------------------------------------------------
                    if (File.exists(pathpidresults + pidfile)) {
                        sauve = "save=" + pathpidresults + pidfile;
                        selectWindow("Log");
                        run("Text...", sauve);
                        message = message + pathpidresults + pidfile + "\n";
                    } // if
                    // ---------------- PID dans PREDICTED --------------------------------------------------
                    if (File.exists(pathpidpredicted + pidfile)) {
                        sauve = "save=" + pathpidpredicted + pidfile;
                        selectWindow("Log");
                        run("Text...", sauve);
                        message = message + pathpidpredicted + pidfile + "\n";
                    } // if
                    run('Close');
                    // --------------------- ECOTAXA --------------------------------------------
                    macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic", path + " " + pathworksample + " " + pid_file + "_dat1.pid " + process_opt + " " + outlines + " " + status + " maj http://www.zooscan.obs-vlfr.fr//");
                    if (macro_flag == "ok") message = message + pathworksample + "ecotaxa_" + pid_file + ".tsv" + "\n";
                    if (File.exists(pathresults + pidfile)) {
                        macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic", path + " " + pathresults + " " + pid_file + "_dat1.pid " + process_opt + " " + outlines + " " + status + " maj http://www.zooscan.obs-vlfr.fr//");
                        if (macro_flag == "ok") message = message + pathresults + "ecotaxa_" + pid_file + ".tsv" + "\n";
                    }
                    if (File.exists(pathpidresults + pidfile)) {
                        macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic", path + " " + pathpidresults + " " + pid_file + "_dat1.pid " + process_opt + " " + outlines + " " + status + " maj http://www.zooscan.obs-vlfr.fr//");
                        if (macro_flag == "ok") message = message + pathpidresults + "ecotaxa_" + pid_file + ".tsv" + "\n";
                    }
                    if (File.exists(pathpidpredicted + pidfile)) {
                        macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic", path + " " + pathpidpredicted + " " + pid_file + "_dat1.pid " + process_opt + " " + outlines + " " + status + " maj http://www.zooscan.obs-vlfr.fr//");
                        if (macro_flag == "ok") message = message + pathpidpredicted + "ecotaxa_" + pid_file + ".tsv" + "\n";
                    }
                } // if exists
                // ---------------------- Fichiers DAT1.TXT -----------------------------------------------------------
                if (File.exists(pathdat1validatted + dat1file)) {
                    if (isOpen("Log")) {
                        selectWindow("Log");
                        run("Close");
                    } // if
                    open(pathdat1validatted + dat1file);
                    wait(100);
                    data = getInfo();
                    run('Close');
                    data = split(data, "\n");
                    // ---------------- Debut -------------------------------------------------------------	
                    print("PID");
                    print(" ");
                    // ---------------- Metatdata ---------------------------------------------------------
                    print("[Metadata]");
                    for (t = 0; t < datameta.length; t++) {
                        print(field[t] + "= " + datameta[t]);
                    } // for
                    print(" ");
                    // ---------------- Suite ----------------------------------------------------------------
                    for (p = summaryligne; p < data.length; p++) {
                        print(data[p]);
                    } // for
                    // ---------------- PID dans PREDICTED --------------------------------------------------
                    sauve = "save=" + pathdat1validatted + dat1file;
                    selectWindow("Log");
                    run("Text...", sauve);
                    run('Close');
                    // ------------ Ecotaxa ------------------
                    //				pid_file = substring(pidfile,0,oo-5);
                    status = false;
                    process_opt = "text";
                    outlines = false;
                    ret_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic", path + " " + pathdat1validatted + " " + pid_file + "_dat1.txt " + process_opt + " " + outlines + " " + status + " maj");
                    if (lengthOf(toString(ret_flag)) > 1) {
                        if (ret_flag == "ok") {
                            message = message + path + "\\ecotaxa\\" + pid_file + "\\ecotaxa_" + pid_file + ".tsv" + "\n";
                        }
                    }
                } // if exists
            }
        }
        // ---------- Mise � jour des donn�es dans les vecteurs ----------------
        array[index] = datatext;
        end = getBoolean(message + "\n \n THERE MIGHT BE OTHER FILES NOT CORRECTED in other locations !..       \n \nEDIT ANOTHER PROFILE ? ");
    } // while	
} // select

//	else {	
else if (option == "add") {
    // ----------------- raw profile  --------------------------------	
    filelist = getFileList(path + "\\raw\\");
    //--------------- Selection des fichiers  -----------------------------------
    j = 0;

    list = newArray(filelist.length);
    for (i = 0; i < filelist.length; i++) {
        test = 0;
        exist = 0;
        long = lengthOf(filelist[i]);
        file = substring(filelist[i], 0, long - 1);
        ctrl = startsWith(file, "generic");
        //	aa = getBoolean(filelist[i]+"    "+file);
        if (ctrl == 1) {
            //					getBoolean(file+"    "+array.length );
            // ----------------- EXCLURE les profils deja dans la liste -------------------------------

            for (m = 1; m < array.length; m++) {
                Filename = filename[m];
                //						getBoolean(Filename+" " +filename[m]);
                if (endsWith(file, Filename) == true) {
                    exist = 1;
                    //							getBoolean(file+"    "+Filename);
                } // if
            } // for
        } // if FlowCam
        //				getBoolean(file+"    "+exist);
        if (exist == 0 && ctrl == 1) {
            list[j] = file;
            j = j + 1;
        } // if
    } // for	

    //---------------------Test de la presence de fichiers dans le repertoire-----------------------------------------------------------------------	
    if (j == 0) {
        configpres = 0;
        getBoolean("No raw sample folder to be added in the selected project. \n \nPlace sample folders named " + instrum + "*.* images in the raw folder of your project \n \nPress YES to abort !          ");
    } //
    else {
        configpres = 1;
        // ---------------------Purger les fichiers vides de la liste ! -------------------------------------
        listaff = newArray(j);
        for (k = 0; k < listaff.length; k++) {
            rr = list[k];
            listaff[k] = rr;
        } // for

        genericprofile = 1;
        while (genericprofile == 1) {
            nbstationdone++;
            Dialog.create("METADATA           version : " + version);
            Dialog.addMessage("--------------------------------------------------------------------------------   ");
            Dialog.addMessage("Project :  " + path);
            Dialog.addMessage("--------------------------------------------------------------------------------   ");
            message = "SELECT Sample to add            ";
            Dialog.addMessage(message);
            Dialog.addChoice("       ", listaff);
            Dialog.show();
            dirprofile = Dialog.getChoice();
            // --------------------------------------------- Suppression deja traites -------------------------------------
            for (i = 0; i < listaff.length; i++) {
                rr = list[i];
                //						showMessage(rr+"  "+dirprofile);
                if (rr == dirprofile) {
                    aa = listaff[i];
                    listaff[i] = aa + " - (done)";
                    //	showMessage("Removed="+rr+"  "+listaff[i]);
                } // if
            } // for	

            if (endsWith(dirprofile, "(done)") == false) {
                // ------------------ Suppression HDR -----------------------------
                long = lengthOf(dirprofile);
                Filename = substring(dirprofile, 8, long);
                check = 1;
                // ------------------------------------------- SAISIE des DONNEES -----------------------------------------------------------------------------------
                while (check == 1) {
                    check = 0;
                    message = "Warning : \n";
                    Dialog.create("METADATA    ");
                    Dialog.addMessage("------------------------------------------------------------------------------------------------------------------------");
                    Dialog.addMessage("Filename =                   " + Filename);
                    Dialog.addMessage("------------------------------------------------------------------------------------------------------------------------");
                    Dialog.addString("Project ", Project);
                    Dialog.addString("Ship ", Ship);
                    Dialog.addString("Sample Id (must start with alphanumeric characters) ", Filename);
                    Dialog.addString("Station Id ", Genericreffile);
                    Dialog.addString("Sampling date (YYYYMMDD-HHMM) ", Datetime);
                    Dialog.addMessage("-------------------------------------------------------------------------------------------------------------------------------------------------------");
                    LATITUDE = parseFloat(Latitude);
                    latitude_ns = newArray("N", "S");
                    if (LATITUDE < 0) {
                        latitude_ns = newArray("S", "N");
                    }
                    LATITUDE = abs(LATITUDE);
                    latitude_deg = floor(LATITUDE);
                    latitude_min = 100 * (latitude - latitude_deg);
                    Dialog.addNumber("LATITUDE (degree) ", latitude_deg);
                    Dialog.addNumber("LATITUDE (minute) ", latitude_min);
                    Dialog.addChoice("LATITUDE (N/S)    ", latitude_ns);

                    LONGITUDE = parseFloat(Longitude);
                    longitude_ew = newArray("E", "W");
                    if (LONGITUDE < 0) {
                        longitude_ew = newArray("W", "E");
                    }
                    LONGITUDE = abs(LONGITUDE);
                    longitude_deg = floor(LONGITUDE);
                    longitude_min = 100 * (LONGITUDE - longitude_deg);
                    Dialog.addNumber("LONGITUDE (degree) ", longitude_deg);
                    Dialog.addNumber("LONGITUDE (minute) ", longitude_min);
                    Dialog.addChoice("LONGITUDE (E/W)    ", longitude_ew);
                    Dialog.addMessage("-------------------------------------------------------------------------------------------------------------------------------------------------------");

                    aff = newArray(Samplinggear, "Niskin", "Bucket", "Net", "Continuous", "Multicorer", "ISIIS", "uvp6");
                    aff[0] = Samplinggear;
                    Dialog.addChoice("Sampling gear       ", aff);
                    Dialog.addNumber("Zmin (m) ", Zmin);
                    Dialog.addNumber("Zmax (m) ", Zmax);
                    Dialog.addNumber("Concentrated water volume (ml) ", Volconc);
                    Dialog.addNumber("         Magnification ", Magnification);
                    Dialog.addString("Cell type       ", Celltype);
                    Dialog.addString("Imaging device ", Instrumtype);
                    Dialog.addString("Comment ", Comment);
                    Dialog.addMessage("------------------------------------------------------------------------------------------------------------------------");
                    Dialog.show;

                    Project = Dialog.getString();
                    a = lengthOf(Project);
                    if (a == 0) {
                        message = message + "Project empty \n";
                        check = 1;
                    } // if
                    ind = indexOf(Project, " ");
                    if (ind != -1) {
                        Project = replace(Project, " ", "_");
                    }

                    Ship = Dialog.getString();
                    a = lengthOf(Ship);
                    if (a == 0) {
                        message = message + "Zooscan Operator empty \n";
                        check = 1;
                    } // if
                    ind = indexOf(Ship, " ");
                    if (ind != -1) {
                        Ship = replace(Ship, " ", "_");
                    }

                    Stationname = Dialog.getString();
                    // ------------------------------- Verifier si n'existe pas deja -----------------------------------------------------------------------------------
                    for (h = 1; h < nbstationdone; h++) {
                        //							print(Stationname+"  "+stationdone[h]);
                        if (Stationname == stationdone[h]) {
                            message = message + "Sample Id allready used \n";
                            check = 1;
                        } // if
                    } // while
                    stationdone[h] = Stationname;
                    a = lengthOf(Stationname);
                    if (a == 0) {
                        message = message + "Sample Id empty \n";
                        check = 1;
                    } // if
                    ind = indexOf(Stationname, " ");
                    if (ind != -1) {
                        Stationname = replace(Stationname, " ", "_");
                    }

                    Genericreffile = Dialog.getString();
                    a = lengthOf(Comment);
                    if (a == 0) {
                        Genericreffile = "no";
                    } // if
                    ind = indexOf(Genericreffile, " ");
                    if (ind != -1) {
                        Genericreffile = replace(Genericreffile, " ", "_");
                    }
                    Genericreffile = replace(Genericreffile, ";", "_");

                    Datetime = Dialog.getString();
                    a = lengthOf(Datetime);
                    if (a == 0) {
                        message = message + "Date empty \n";
                        check = 1;
                    } // if
                    if (a != 13) {
                        message = message + "Date incorrect \n";
                        check = 1;
                    } // if
                    ind = indexOf(Datetime, " ");
                    if (ind != -1) {
                        Datetime = replace(Datetime, " ", "-");
                    }

                    latitude_deg = Dialog.getNumber();
                    if (indexOf(toString(latitude_deg), ".") >= 0) {
                        message = message + "Latitude (degree) is not an integer \n ";
                        check = 1;
                    }
                    if (latitude_deg > 90) {
                        message = message + "Latitude (degree) > 90 \n ";
                        check = 1;
                    }
                    if (latitude_deg < 0) {
                        message = message + "Latitude (degree) must not be signed \n ";
                        check = 1;
                    }

                    latitude_min = Dialog.getNumber();
                    if (latitude_min > 60) {
                        message = message + "Latitude (minute) > 60 \n ";
                        check = 1;
                    }
                    if (latitude_min > floor(latitude_min)) {
                        aa = toString(latitude_min, 5);
                        data = split(aa, ".");
                        aaa = data[0];
                        if (lengthOf(aaa) == 1) {
                            latitude_min = "0" + aaa + data[1];
                        } else {
                            latitude_min = aaa + data[1];
                        }
                    } // if
                    Latitude = toString(latitude_deg) + "." + latitude_min;

                    latitude_ns = Dialog.getChoice();
                    if (latitude_ns == "S") Latitude = "-" + Latitude;

                    longitude_deg = Dialog.getNumber();
                    if (indexOf(toString(longitude_deg), ".") >= 0) {
                        message = message + "Longitude (degree) is not an integer \n ";
                        check = 1;
                    }
                    if (longitude_deg > 180) {
                        message = message + "Longitude (degree) > 180 \n ";
                        check = 1;
                    }
                    if (longitude_deg < 0) {
                        message = message + "Longitude (degree) must not be signed \n ";
                        check = 1;
                    }

                    longitude_min = Dialog.getNumber();
                    if (longitude_min > 60) {
                        message = message + "Latitude (minute) > 60 \n ";
                        check = 1;
                    }
                    if (longitude_min > floor(longitude_min)) {
                        aa = toString(longitude_min, 5);
                        data = split(aa, ".");
                        aaa = data[0];
                        if (lengthOf(aaa) == 1) {
                            longitude_min = "0" + aaa + data[1];
                        } else {
                            longitude_min = aaa + data[1];
                        }
                    } // if
                    Longitude = toString(longitude_deg) + "." + longitude_min;

                    longitude_ew = Dialog.getChoice();
                    if (longitude_ew == "W") Longitude = "-" + Longitude;
                    Samplinggear = Dialog.getChoice();

                    Zmin = Dialog.getNumber();

                    Zmax = Dialog.getNumber();
                    if (Zmax < Zmin) {
                        message = message + "Zmin > Zmax !   \n  ";
                        check = 1;
                    } // if

                    Volconc = Dialog.getNumber();
                    if (Volconc < 0) {
                        message = message + "Concentrated water volume (ml) < 0 !   \n  ";
                        check = 1;
                    } // if
                    if (Volconc == 0) {
                        message = message + "''Concentrated water volume (ml)'' is not a number  or set to 0   \n  ";
                        check = 1;
                    } // if

                    Magnification = Dialog.getNumber();
                    if (Magnification < 0) {
                        message = message + "Magnification < 0 !   \n  ";
                        check = 1;
                    } // if
                    if (Magnification == 0) {
                        message = message + "''Magnification'' is not a number  or set to 0   \n  ";
                        check = 1;
                    } // if

                    Celltype = Dialog.getString();
                    Celltype = replace(Celltype, ";", "_");

                    Instrumtype = Dialog.getString();
                    Instrumtype = replace(Instrumtype, ";", "_");

                    Comment = Dialog.getString();
                    a = lengthOf(Comment);
                    if (a == 0) {
                        Comment = "no";
                    } // if
                    ind = indexOf(Comment, " ");
                    if (ind != -1) {
                        Comment = replace(Comment, " ", "_");
                    }
                    Comment = replace(Comment, ";", "_");

                    if (check == 1) {
                        message = message + " \nEnter values again              ";
                        showMessage(message);
                    } // if	
                    else { // ------------------------ Recuperation des donnees existantes ---------------------------------------
                        open(path + "\\meta\\" + metafile);
                        wait(100);
                        metadata = getInfo();
                        run('Close');
                        data = split(metadata, "\n");
                        // ----------------- Impression des premieres lignes -----------------
                        if (isOpen("Log")) {
                            selectWindow("Log");
                            run("Close");
                        } // if
                        for (b = 0; b < data.length; b++) {
                            print(data[b]);
                        } // for
                        // ----------------- Ajout de la ligne -------------------------------------
                        Filename = toString(Filename);
                        //	Filename= replace(Filename," ","_");
                        Project = toLowerCase(Project);
                        Ship = toLowerCase(Ship);
                        Stationname = toLowerCase(Stationname);
                        //	Stationname = replace(Stationname," ","_");
                        Comment = toLowerCase(Comment);
                        print(Project + ";" + Ship + ";" + Filename + ";" + Stationname + ";" + Genericreffile + ";" + Latitude + ";" + Longitude + ";" + Samplinggear + ";" + Zmin + ";" + Zmax + ";" + Volconc + ";" + Magnification + ";" + Celltype + ";" + Instrumtype + ";" + Comment + ";" + Datetime);
                        // ---------------- Sauvegarde Generic_header---------------------------------
                        sauve = "save=" + path + "\\meta\\" + metafile;
                        selectWindow("Log");
                        run("Text...", sauve);
                        run('Close');

                        // ---------------- Creation repertoire profil -------------------------------------------------
                        pathprofile = path + "\\work\\" + Stationname + "\\";
                        File.makeDirectory(pathprofile);

                        // ---------------- Sauvegarde fichier individuel dans repertoire profil ---------------
                        if (isOpen("Log")) {
                            selectWindow("Log");
                            run("Close");
                        } // if
                        print(array[0]);
                        print(Project + ";" + Ship + ";" + Filename + ";" + Stationname + ";" + Genericreffile + ";" + Latitude + ";" + Longitude + ";" + Samplinggear + ";" + Zmin + ";" + Zmax + ";" + Volconc + ";" + Magnification + ";" + Celltype + ";" + Instrumtype + ";" + Comment + ";" + Datetime);
                        sauve = "save=" + pathprofile + Stationname + "_meta.txt";
                        //							getBoolean(sauve);
                        selectWindow("Log");
                        run("Text...", sauve);
                        run('Close');
                    } // else	

                } // while
            } // if done
            else if (endsWith(dirprofile, "(done)") == true) {
                genericprofile = getBoolean("Profile in database !    \n  \nEnter another profile ?   ");
            } // else if
            else {
                genericprofile = getBoolean("Enter another profile ?   ");
            } // else
        } // while genericprofile
    } // if add
} // if


// ---------------- FIN --------------------------------------------
ret = "ok";
return ret;