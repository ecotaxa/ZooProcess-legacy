// -------------------------Zooprocess_flowcam_metadata --------------------
version = "8.16";
date = "2023/04/30";

arg = 		getArgument(); 
array = 	split(arg," ");
instrum = 	array[0];
option= 	array[1];
path= 		array[2]; 

// ----------------- Initialisation ---------------------------
maxgg = 100000;

// ----------------- Upgrade Metadata -------------------------
paramlist = runMacro("Zooprocess_flowcam_upgrade_metadata.txt",arg+" init");		
if (lengthOf(toString(paramlist)) == 1) { aa = getBoolean("Zooprocess_flowcam_upgrade_metadata ABORTED \n \nPress CANCEL to END");		}

// ----------------------------- OUVERTURE META ----------------------------------
long = lengthOf(path);
a = indexOf(path,"_");
Project  = substring(path,a+1,long);
metafile = "Flowcam_header_"+Project+".txt";

open(path+"\\meta\\"+metafile);
wait(100);
metadata = getInfo();
run('Close');
array = split(metadata,"\n");
arrayrec = split(metadata,"\n");
liste = newArray(array.length-1);

// ------------------------ Recuperation vecteurs METADATA ------------------------------
/*
project = 		newArray(array.length);
cruise = 		newArray(array.length);
ship = 			newArray(array.length);
filename = 		newArray(array.length);
sampleId = 		newArray(array.length);
otherreffile = 		newArray(array.length);
latitude = 		newArray(array.length);
longitude = 		newArray(array.length);
samplinggear = 		newArray(array.length);
zmin = 			newArray(array.length);
zmax = 			newArray(array.length);
volconc = 		newArray(array.length);
initial_col_vol = 	newArray(array.length);
celltype = 		newArray(array.length);
comment = 		newArray(array.length);
datetime = 		newArray(array.length);
stationId = 		newArray(array.length);
depth = 		newArray(array.length);
ctdref = 		newArray(array.length);
townb = 		newArray(array.length);
towtype = 		newArray(array.length);
nettype = 		newArray(array.length);
netmesh = 		newArray(array.length);
netsurf = 		newArray(array.length);
vol_qc = 		newArray(array.length);
depth_qc = 		newArray(array.length);
sample_qc = 		newArray(array.length);
barcode = 		newArray(array.length);
latitude_end = 		newArray(array.length);
longitude_end = 	newArray(array.length);
net_duration = 		newArray(array.length);
ship_speed_knots = 	newArray(array.length);
cable_length = 		newArray(array.length);
cable_angle = 		newArray(array.length);
cable_speed = 		newArray(array.length);
nb_jar = 		newArray(array.length);
sieve_min = 		newArray(array.length);
sieve_max = 		newArray(array.length);
fixative = 		newArray(array.length);
flow_start = 		newArray(array.length);
flow_end = 		newArray(array.length);
flow_type = 		newArray(array.length);
dilution_method = 	newArray(array.length);

stationdone = 		newArray(maxgg);
*/

// -------------------- EDITION -----------------------------------------------------------------
if (option == "edit") {
	// ------------------------ LISTE des sample -------------------------
	for (i=1; i<array.length ; i++) { 
		ligne_txt = replace(array[i],";"," ");
		ligne = split(ligne_txt,"\ ");
		Filename = 	ligne[2];
		liste[i-1] = 	Filename;	
	}
	end = 1;
	while (end==1) {
		Dialog.create("FLOWCAM sample selector        version : "+version);
		Dialog.addMessage("---------------------------------------------------------------------------------------------------------");
		Dialog.addMessage("Project :  "+path);
		Dialog.addMessage("Metadatafile = "+metafile);
		Dialog.addMessage("---------------------------------------------------------------------------------------------------------");
		Dialog.addMessage("SELECT sample to EDIT  or press CANCEL  "); 
		Dialog.addMessage("     Filename    "); 
		Dialog.addChoice("       ", liste);
		Dialog.addMessage("---------------------------------------------------------------------------------------------------------");
		Dialog.show();
		profile = Dialog.getChoice();
		index = 0;
		for (i=1; i<array.length ; i++) { 
			// ----------------- Détection de la ligne à corriger -----------------
			ligne = replace(array[i],";"," ");
			ligne = split(ligne,"\ ");
			Filename = 		ligne[2];
			filename[i]=		Filename;
			if (profile == Filename) { index = i;	}
		} // for
		ligne = replace(array[index],";"," ");
		ligne = split(ligne,"\ ");	
		Project = 		ligne[0];
		Ship = 			ligne[1];
		Filename = 		ligne[2];
		SampleId =		ligne[3];
		Otherreffile =		ligne[4];
		Latitude =		ligne[5];
		Longitude =		ligne[6];
		Samplinggear =		ligne[7];
		Zmin =			ligne[8];
		Zmax =			ligne[9];
		Volconc =		ligne[10];
		Initial_col_vol  =	ligne[11];
		Celltype =		ligne[12];
		Comment = 		ligne[13];
		Datetime = 		ligne[14];
		StationId = 		ligne[15];
		Depth = 		ligne[16];
		Ctdref = 		ligne[17];
		Townb = 		ligne[18];
		Towtype = 		ligne[19];
		Nettype = 		ligne[20];
		Netmesh = 		ligne[21];
		Netsurf = 		ligne[22];
		Vol_qc = 		ligne[23];
		Depth_qc = 		ligne[24];
		Sample_qc = 		ligne[25];
		Barcode = 		ligne[26];
		Latitude_end = 		ligne[27];
		Longitude_end = 	ligne[28];
		Net_duration = 		ligne[29];
		Ship_speed_knots = 	ligne[30];
		Cable_length = 		ligne[31];
		Cable_angle = 		ligne[32];
		Cable_speed = 		ligne[33];
		Nb_jar = 		ligne[34];
		Sieve_min = 		ligne[35];
		Sieve_max = 		ligne[36];
		Fixative = 		ligne[37];
		Flow_start = 		ligne[38];
		Flow_end = 		ligne[39];
		Flow_type = 		ligne[40];
		Dilution_method = 	ligne[41];
		Cruise_proj = 		ligne[42];
		
		// ------------------------- Page edition --------------------------------------------------
		datatext1 = Project+";"+Ship+";"+Filename+";"+SampleId+";"+Otherreffile+";"+Latitude+";"+Longitude+";"+Samplinggear+";"+Zmin+";"+Zmax+";"+Volconc+";"+Initial_col_vol+";"+Celltype+";"+Comment+";"+Datetime;
		datatext2 = StationId+";"+Depth+";"+Ctdref+";"+Townb+";"+Towtype+";"+Nettype+";"+Netmesh+";"+Netsurf+";"+Vol_qc+";"+Depth_qc+";"+Sample_qc+";"+Barcode+";"+Latitude_end+";"+Longitude_end;
		datatext3 = toString(Net_duration)+";"+Ship_speed_knots+";"+Cable_length+";"+Cable_angle+";"+Cable_speed+";"+Nb_jar+";"+Sieve_min+";"+Sieve_max+";"+Fixative+";"+Flow_start+";"+Flow_end+";"+Flow_type+";"+Dilution_method+";"+Cruise_proj;
		
		datatext = runMacro("Zooprocess_flowcam_metadata_windows.txt",datatext1+";"+datatext2+";"+datatext3+";edit");		
		if (lengthOf(toString(datatext)) == 1) {  showMessage("Zooprocess_flowcam_metadata_windows ABORTED");		}
		else {
			// ------------------------ Recuperation des donnees existantes ---------------------------------------
			open(path+"\\meta\\"+metafile);
			wait(100);
			metadata = getInfo();
			run('Close');
			DATA = split(metadata,"\n");
			// ---------------- Message ---------------------------------------------------------------------
			message = "Files modified : \n";
			
			// ----------------- Impression des premieres lignes -----------------
			if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
			print(paramlist);
			for (b=1;b<index ; b++) { 	print(DATA[b]);	} // for
			
			// ----------------- Ajout de la ligne -------------------------------------
			print(datatext);
			
			// ---------------- Impression lignes suivantes ------------------------------
			for (b=index+1;b<DATA.length ; b++) { 	print(DATA[b]);	} // for
			
			// ---------------- Sauvegarde flowcam_header---------------------------------
			sauve = "save=" + path+"\\meta\\"+metafile;
			selectWindow("Log");
			run("Text...",sauve);
			run('Close');
			message = message + path+"\\meta\\"+metafile+"\n";
			
			// ---------------- Sauvegarde fichier individuel dans repertoire profil ---------------
			if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
			print(paramlist);
			print(datatext);
			pathprofile = path+"\\work\\"+SampleId+"\\";
			sauve = "save=" + pathprofile+SampleId+"_meta.txt";
			selectWindow("Log");
			run("Text...",sauve);
			run('Close');
			message = message + pathprofile+SampleId+"_meta.txt"+"\n";
			
			// ---------------------- Mise à jour des données dans l'architecture projet -----------
			pidfile = 	SampleId+"_dat1.pid";
			dat1file = 	SampleId+"_dat1.txt";
			pathworksample = path+"\\"+"\\work\\"+SampleId+"\\";
			pathresults = 		path+"\\"+"\\results";
			pathpidresults = 	path+"\\"+"\\PID_process\\"+"\\Pid_results\\";
			pathpidpredicted = 	path+"\\"+"\\PID_process\\"+"\\Pid_results\\"+"\\Pid_predicted\\";
			pathdat1validatted = 	path+"\\"+"\\PID_process\\"+"\\Pid_results\\"+"\\Dat1_validated\\";
			// ---------------------- Fichiers PID -----------------------------------------------------------
			data = replace(datatext,";"," ");
			datameta = split(data," ");
			field = arrayrec[0];
			field = replace(field,";"," ");
			field = split(field," ");
			// --------------------- SSI PID existe ----------------------------------------------------------
			if (File.exists(pathworksample+pidfile)) {
				if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
				open(pathworksample+pidfile);
				wait(100);
				data = getInfo();
				run('Close');
				data = split(data,"\n");
				for (p=0;p<data.length;p++) {
					dataligne = data[p];
					if (dataligne == "[Run_Summary]") summaryligne = p;
				} // for
				// ---------------- Debut -------------------------------------------------------------	
				print("PID");
				print(" ");
				// ---------------- Metatdata ---------------------------------------------------------
				print("[Metadata]");
				for (t=0;t<datameta.length;t++) {	print(field[t]+"= "+datameta[t]);				} // for
				print(" ");
				// ---------------- Suite ----------------------------------------------------------------
				for (p=summaryligne;p<data.length;p++) {		print(data[p]);				} // for
				// ---------------- PID dans WORK SAMPLE --------------------------------------------------
				sauve = "save=" + pathworksample+pidfile;
				selectWindow("Log");
				run("Text...",sauve);
				message = message + pathworksample+pidfile+"\n";
				
				// ---------------- PID dans RESULTS --------------------------------------------------
				if (File.exists(pathresults+pidfile)) {
					sauve = "save=" + pathresults+pidfile;
					selectWindow("Log");
					run("Text...",sauve);
					message = message + pathresults+pidfile+"\n";
				} // if
				// ---------------- PID dans PID RESULTS --------------------------------------------------
				if (File.exists(pathpidresults+pidfile)) {
					sauve = "save=" + pathpidresults+pidfile;
					selectWindow("Log");
					run("Text...",sauve);
					message = message + pathpidresults+pidfile+"\n";
				} // if
				// ---------------- PID dans PREDICTED --------------------------------------------------
				if (File.exists(pathpidpredicted+pidfile)) {
					sauve = "save=" + pathpidpredicted+pidfile;
					selectWindow("Log");
					run("Text...",sauve);
					message = message + pathpidpredicted+pidfile+"\n";	
				} // if
				run('Close');
				
				/*			
				// ------------ Ecotaxa settings ------------------
				oo = indexOf(pidfile,".");
				pid_file = substring(pidfile,0,oo-5);
				status = false;
				process_opt = "pid";
				outlines = false;
				// --------------------- ECOTAXA --------------------------------------------
				macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic",path+" "+pathworksample+" "+pid_file+"_dat1.pid "+process_opt+" "+outlines+" "+status+" maj http://piqv.imev-mer.fr//");
				if (macro_flag == "ok") message = message+pathworksample+"ecotaxa_"+pid_file+".tsv"+"\n";
				if (File.exists(pathresults+pidfile)) {
				macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic",path+" "+pathresults+" "+pid_file+"_dat1.pid "+process_opt+" "+outlines+" "+status+" maj http://piqv.imev-mer.fr//");
				if (macro_flag == "ok") message = message+pathresults+"ecotaxa_"+pid_file+".tsv"+"\n";
				}
				if (File.exists(pathpidresults+pidfile)) {
				macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic",path+" "+pathpidresults+" "+pid_file+"_dat1.pid "+process_opt+" "+outlines+" "+status+" maj http://piqv.imev-mer.fr//");
				if (macro_flag == "ok") message = message+pathpidresults+"ecotaxa_"+pid_file+".tsv"+"\n";
				}
				if (File.exists(pathpidpredicted+pidfile)) {
				macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic",path+" "+pathpidpredicted+" "+pid_file+"_dat1.pid "+process_opt+" "+outlines+" "+status+" maj http://piqv.imev-mer.fr//");
				if (macro_flag == "ok") message = message+pathpidpredicted+"ecotaxa_"+pid_file+".tsv"+"\n";
				}
				*/			
			} // if exists
			// ---------------------- Fichiers DAT1.TXT -----------------------------------------------------------
			if (File.exists(pathdat1validatted+dat1file)) {
				if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
				open(pathdat1validatted+dat1file);
				wait(100);
				data = getInfo();
				run('Close');
				data = split(data,"\n");
				// ---------------- Debut -------------------------------------------------------------	
				print("PID");
				print(" ");
				// ---------------- Metatdata ---------------------------------------------------------
				print("[Metadata]");
				for (t=0;t<datameta.length;t++) {	print(field[t]+"= "+datameta[t]);				} // for
				print(" ");
				// ---------------- Suite ----------------------------------------------------------------
				for (p=summaryligne;p<data.length;p++) {		print(data[p]);				} // for
				// ---------------- PID dans PREDICTED --------------------------------------------------
				sauve = "save=" + pathdat1validatted+dat1file;
				selectWindow("Log");
				run("Text...",sauve);
				message = message + pathdat1validatted+dat1file+"\n";	
				run('Close');
			} // if exists
			//				showMessage(message+"\n \n THERE MIGHT BE OTHER FILES NOT CORRECTED in other locations !..       ");
			array[index] = datatext;
			end = getBoolean(message+"\n \n THERE MIGHT BE OTHER FILES NOT CORRECTED in other locations !..       \n \nEDIT ANOTHER PROFILE ? ");
			
		}
	} // while
} // select
// ------------------------ UPDATE ALL ------------------------------------------
else if (option == "update_all" ) {
	message = "UPDATED Files : \n";
	field = arrayrec[0];
	field = replace(field,";"," ");
	field = split(field," ");
	for (pp=1; pp<array.length ; pp++) { 		
		ligne = replace(array[pp],";"," ");		
		//		aa = getBoolean(ligne);
		ligne = split(ligne,"\ ");	
		Project = 		ligne[0];
		Ship = 			ligne[1];
		Filename = 		ligne[2];
		SampleId =		ligne[3];
		Otherreffile =		ligne[4];
		Latitude =		ligne[5];
		Longitude =		ligne[6];
		Samplinggear =		ligne[7];
		Zmin =			ligne[8];
		Zmax =			ligne[9];
		Volconc =		ligne[10];
		Initial_col_vol  =	ligne[11];
		Celltype =		ligne[12];
		Comment = 		ligne[13];
		Datetime = 		ligne[14];
		StationId = 		ligne[15];
		Depth = 		ligne[16];
		Ctdref = 		ligne[17];
		Townb = 		ligne[18];
		Towtype = 		ligne[19];
		Nettype = 		ligne[20];
		Netmesh = 		ligne[21];
		Netsurf = 		ligne[22];
		Vol_qc = 		ligne[23];
		Depth_qc = 		ligne[24];
		Sample_qc = 		ligne[25];
		Barcode = 		ligne[26];
		Latitude_end = 		ligne[27];
		Longitude_end = 	ligne[28];
		Net_duration = 		ligne[29];
		Ship_speed_knots = 	ligne[30];
		Cable_length = 		ligne[31];
		Cable_angle = 		ligne[32];
		Cable_speed = 		ligne[33];
		Nb_jar = 		ligne[34];
		Sieve_min = 		ligne[35];
		Sieve_max = 		ligne[36];
		Fixative = 		ligne[37];
		Flow_start = 		ligne[38];
		Flow_end = 		ligne[39];
		Flow_type = 		ligne[40];
		Dilution_method = 	ligne[41];
		Cruise_proj = 		ligne[42];
		
		// ------------------------- MAJ --------------------------------------------------
		datatext1 = Project+";"+Ship+";"+Filename+";"+SampleId+";"+Otherreffile+";"+Latitude+";"+Longitude+";"+Samplinggear+";"+Zmin+";"+Zmax+";"+Volconc+";"+Initial_col_vol+";"+Celltype+";"+Comment+";"+Datetime;
		datatext2 = StationId+";"+Depth+";"+Ctdref+";"+Townb+";"+Towtype+";"+Nettype+";"+Netmesh+";"+Netsurf+";"+Vol_qc+";"+Depth_qc+";"+Sample_qc+";"+Barcode+";"+Latitude_end+";"+Longitude_end;
		datatext3 = toString(Net_duration)+";"+Ship_speed_knots+";"+Cable_length+";"+Cable_angle+";"+Cable_speed+";"+Nb_jar+";"+Sieve_min+";"+Sieve_max+";"+Fixative+";"+Flow_start+";"+Flow_end+";"+Flow_type+";"+Dilution_method+";"+Cruise_proj;
		datatext = datatext1+";"+datatext2+";"+datatext3;
		print(datatext);
		
		// ----------------------- Enregistrement --------------------------
		pathprofile = path+"\\work\\"+SampleId+"\\";
		sauve = "save=" + pathprofile+SampleId+"_meta.txt";
		selectWindow("Log");
		run("Text...",sauve);
		run('Close');
		message = message + pathprofile+SampleId+"_meta.txt"+"\n";
		
		// ---------------------- Mise à jour des données dans l'architecture projet -----------
		pidfile = 	SampleId+"_dat1.pid";
		dat1file = 	SampleId+"_dat1.txt";
		pathworksample = path+"\\"+"\\work\\"+SampleId+"\\";
		pathresults = 		path+"\\"+"\\results";
		pathpidresults = 	path+"\\"+"\\PID_process\\"+"\\Pid_results\\";
		pathpidpredicted = 	path+"\\"+"\\PID_process\\"+"\\Pid_results\\"+"\\Pid_predicted\\";
		pathdat1validatted = 	path+"\\"+"\\PID_process\\"+"\\Pid_results\\"+"\\Dat1_validated\\";
		// ---------------------- Fichiers PID -----------------------------------------------------------
		data = replace(datatext,";"," ");
		datameta = split(data," ");
		
		// --------------------- SSI PID existe ----------------------------------------------------------
		if (File.exists(pathworksample+pidfile)) {
			if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
			open(pathworksample+pidfile);
			wait(100);
			data = getInfo();
			
			run('Close');
			arrayrec = split(data,"\n");
			summaryligne = 0;
			//			array = split(data,"\n");
			for (p=0;p<arrayrec.length;p++) {
				dataligne = arrayrec[p];
				if (dataligne == "[Run_Summary]") summaryligne = p;
			} // for
			// ---------------- Debut -------------------------------------------------------------	
			print("PID");
			print(" ");
			// ---------------- Metatdata ---------------------------------------------------------
			print("[Metadata]");
			for (t=0;t<datameta.length;t++) {	print(field[t]+"= "+datameta[t]);				} // for
			print(" ");
			// ---------------- Suite ----------------------------------------------------------------
			for (p=summaryligne;p<arrayrec.length;p++) {		print(arrayrec[p]);				} // for
			// ---------------- PID dans WORK SAMPLE --------------------------------------------------
			sauve = "save=" + pathworksample+pidfile;
			selectWindow("Log");
			run("Text...",sauve);
			// ------------ Ecotaxa settings ------------------
			oo = indexOf(pidfile,".");
			pid_file = substring(pidfile,0,oo-5);
			status = false;
			process_opt = "pid";
			outlines = false;
			// ---------------- PID dans RESULTS --------------------------------------------------
			if (File.exists(pathresults+pidfile)) {
				sauve = "save=" + pathresults+pidfile;
				selectWindow("Log");
				run("Text...",sauve);
			} // if
			// ---------------- PID dans PID RESULTS --------------------------------------------------
			if (File.exists(pathpidresults+pidfile)) {
				sauve = "save=" + pathpidresults+pidfile;
				selectWindow("Log");
				run("Text...",sauve);
			} // if
			// ---------------- PID dans PREDICTED --------------------------------------------------
			if (File.exists(pathpidpredicted+pidfile)) {
				sauve = "save=" + pathpidpredicted+pidfile;
				selectWindow("Log");
				run("Text...",sauve);	
			} // if
			run('Close');
			/*
			// --------------------- ECOTAXA --------------------------------------------
			macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic",path+" "+pathworksample+" "+pid_file+"_dat1.pid "+process_opt+" "+outlines+" "+status+" maj http://piqv.imev-mer.fr//");
			if (macro_flag == "ok") message = message+pathworksample+"ecotaxa_"+pid_file+".tsv"+"\n";
			if (File.exists(pathresults+pidfile)) {
			macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic",path+" "+pathresults+" "+pid_file+"_dat1.pid "+process_opt+" "+outlines+" "+status+" maj http://piqv.imev-mer.fr//");
			if (macro_flag == "ok") message = message+pathresults+"ecotaxa_"+pid_file+".tsv"+"\n";
			}
			if (File.exists(pathpidresults+pidfile)) {
			macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic",path+" "+pathpidresults+" "+pid_file+"_dat1.pid "+process_opt+" "+outlines+" "+status+" maj http://piqv.imev-mer.fr//");
			if (macro_flag == "ok") message = message+pathpidresults+"ecotaxa_"+pid_file+".tsv"+"\n";
			}
			if (File.exists(pathpidpredicted+pidfile)) {
			macro_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic",path+" "+pathpidpredicted+" "+pid_file+"_dat1.pid "+process_opt+" "+outlines+" "+status+" maj http://piqv.imev-mer.fr//");
			if (macro_flag == "ok") message = message+pathpidpredicted+"ecotaxa_"+pid_file+".tsv"+"\n";
			}
			*/
		} // if exists
		// ---------------------- Fichiers DAT1.TXT -----------------------------------------------------------
		if (File.exists(pathdat1validatted+dat1file)) {
			if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
			open(pathdat1validatted+dat1file);
			wait(100);
			data = getInfo();
			run('Close');
			arrayrec = split(data,"\n");
			// ---------------- Debut -------------------------------------------------------------	
			print("PID");
			print(" ");
			// ---------------- Metatdata ---------------------------------------------------------
			print("[Metadata]");
			for (t=0;t<datameta.length;t++) {	print(field[t]+"= "+datameta[t]);				} // for
			print(" ");
			// ---------------- Suite ----------------------------------------------------------------
			for (p=summaryligne;p<arrayrec.length;p++) {		print(arrayrec[p]);				} // for
			// ---------------- PID dans PREDICTED --------------------------------------------------
			sauve = "save=" + pathdat1validatted+dat1file;
			selectWindow("Log");
			run("Text...",sauve);
			run('Close');
			// ------------ Ecotaxa ------------------
			//				pid_file = substring(pidfile,0,oo-5);
			status = false;
			process_opt = "text";
			outlines = false;
			ret_flag = runMacro("Zooprocess_pid_to_ecotaxa_flowcam_uvp5_generic",path+" "+pathdat1validatted+" "+pid_file+"_dat1.txt "+process_opt+" "+outlines+" "+status+" maj");
			if (lengthOf(toString(ret_flag)) > 1) {
				if (ret_flag == "ok") {
					message = message+path+"\\ecotaxa\\"+pid_file+"\\ecotaxa_"+pid_file+".tsv"+"\n";
				}
			}
		} // if exists
	}// for
	showMessage("WARNING",message);
}// update_all

else if (option == "add") {
	// ----------------- Vectorisation metafile -----------------------
	filename = 	newArray(array.length);
	for (i=1; i<array.length ; i++) { 
		ligne_txt = replace(array[i],";"," ");
		ligne = split(ligne_txt,"\ ");
		Filename = 		ligne[2];
		filename[i]=		Filename;
	}
	if (array.length > 1 ){
		// -------------------------- Récupération des données sample précédent ----------------------
		ligne_txt = replace(array[array.length-1],";"," ");
		ligne = split(ligne_txt,"\ ");
		Project = 		ligne[0];
		Ship = 			ligne[1];
		Filename = 		ligne[2];
		SampleId =		ligne[3];
		Otherreffile =		ligne[4];
		Latitude =		ligne[5];
		Longitude =		ligne[6];
		Samplinggear =		ligne[7];
		Zmin =			ligne[8];
		Zmax =			ligne[9];
		Volconc =		ligne[10];
		Initial_col_vol  =	ligne[11];
		Celltype =		ligne[12];
		Comment = 		ligne[13];
		Datetime = 		ligne[14];
		StationId = 		ligne[15];
		Depth = 		ligne[16];
		Ctdref = 		ligne[17];
		Townb = 		ligne[18];
		Towtype = 		ligne[19];
		Nettype = 		ligne[20];
		Netmesh = 		ligne[21];
		Netsurf = 		ligne[22];
		Vol_qc = 		ligne[23];
		Depth_qc = 		ligne[24];
		Sample_qc = 		ligne[25];
		Barcode = 		ligne[26];
		Latitude_end = 		ligne[27];
		Longitude_end = 	ligne[28];
		Net_duration = 		ligne[29];
		Ship_speed_knots = 	ligne[30];
		Cable_length = 		ligne[31];
		Cable_angle = 		ligne[32];
		Cable_speed = 		ligne[33];
		Nb_jar = 		ligne[34];
		Sieve_min = 		ligne[35];
		Sieve_max = 		ligne[36];
		Fixative = 		ligne[37];
		Flow_start = 		ligne[38];
		Flow_end = 		ligne[39];
		Flow_type = 		ligne[40];
		Dilution_method = 	ligne[41];
		Cruise_proj = 		ligne[42];	
	}
	
	// --------------- Saisie d'un nouveau profile ------------------------------------------------
	filelist  = 	getFileList(path+"\\raw\\");
	// --------------- Selection des fichiers  -----------------------------------
	j = 0;
	list = newArray(filelist.length);
	for (i=0; i<filelist.length ; i++) {	
		test = 0;		exist = 0;
		long = lengthOf( filelist[i]);
		file = substring(filelist[i],0,long-1);
		if (startsWith(file,"flowcam") == true) {
			// ----------------- EXCLURE les profils deja dans la liste -------------------------------
			for (m=1; m<array.length ; m++) { 	Filename = filename[m];
				if (endsWith(file,Filename) == true ) {		exist = 1;		} // if
			} // for
		} // if FlowCam
		if ( exist == 0 && startsWith(file,"flowcam") == true )	{		list[j] = file;  j = j + 1;		} // if
	} // for	
	
	//---------------------Test de la presence de fichiers dans le repertoire-----------------------------------------------------------------------	
	if (j==0) { configpres = 0;
		getBoolean("No raw sample folder to be added in the selected project. \n \nPlace sample folders named ''flowcam_*'' containing FLOWCAM ''rawfile_xxxxxx.tif'' images in the raw folder of your project \n \nPress YES to abort !          ");
	} //
	else { 	configpres = 1;
		// ---------------------Purger les fichiers vides de la liste ! -------------------------------------
		listaff = newArray(j);
		for (k=0;k<listaff.length ;k++) {	rr = list[k];	listaff[k] = rr;	 } // for
		otherprofile = 1;
		while (otherprofile == 1) {
			// ------------------- AJOUT récusrsif de profils ------------------------------------
			Dialog.create("FLOWCAM METADATA           version : "+version);
			Dialog.addMessage("--------------------------------------------------------------------------------   ");
			Dialog.addMessage("Project :  "+path);
			Dialog.addMessage("Metadatafile = "+metafile);
			Dialog.addMessage("--------------------------------------------------------------------------------   ");
			Dialog.addMessage("SELECT Sample to add  or press CANCEL  ");
			Dialog.addChoice("       ", listaff);
			Dialog.show();
			dirprofile = Dialog.getChoice();
			// --------------------------------------------- Suppression deja traites -------------------------------------
			for (i=0; i<listaff.length ; i++) {	
				rr = list[i];
				if (rr == dirprofile) {	aa = listaff[i];	listaff[i] = aa+" - (done)";	
				} // if
			} // for	
			
			if (endsWith(dirprofile,"(done)") == false) {
				// ------------------------- Recuperation SampleId -----------------------------------------
				long = lengthOf(dirprofile);
				SampleId = substring(dirprofile,8,long);
				
				if (array.length == 1) {
					// ------------------------- Si premier sample du header => valeurs par défaut ------------
					datatext = runMacro("Zooprocess_flowcam_upgrade_metadata.txt",arg+" "+SampleId);
					if (lengthOf(toString(datatext)) == 1) { aa = getBoolean("Zooprocess_flowcam_upgrade_metadata ABORTED \n \nPress CANCEL to END");		}
				}
				else {
					datatext1 = Project+";"+Ship+";"+Filename+";"+SampleId+";"+Otherreffile+";"+Latitude+";"+Longitude+";"+Samplinggear+";"+Zmin+";"+Zmax+";"+Volconc+";"+Initial_col_vol+";"+Celltype+";"+Comment+";"+Datetime;
					datatext2 = StationId+";"+Depth+";"+Ctdref+";"+Townb+";"+Towtype+";"+Nettype+";"+Netmesh+";"+Netsurf+";"+Vol_qc+";"+Depth_qc+";"+Sample_qc+";"+Barcode+";"+Latitude_end+";"+Longitude_end;
					datatext3 = toString(Net_duration)+";"+Ship_speed_knots+";"+Cable_length+";"+Cable_angle+";"+Cable_speed+";"+Nb_jar+";"+Sieve_min+";"+Sieve_max+";"+Fixative+";"+Flow_start+";"+Flow_end+";"+Flow_type+";"+Dilution_method+";"+Cruise_proj;	
					datatext = datatext1+";"+datatext2+";"+datatext3;
				}
				
				// ------------------------- Page edition --------------------------------------------------				
				datatext = runMacro("Zooprocess_flowcam_metadata_windows",datatext+";add");		
				if (lengthOf(toString(datatext)) == 1) {  showMessage("Zooprocess_flowcam_metadata_windows ABORTED");		}
				else {
					// ------------------------ Recuperation des donnees existantes ---------------------------------------
					open(path+"\\meta\\"+metafile);
					wait(100);
					metadata = getInfo();
					run('Close');
					data = split(metadata,"\n");
					// ----------------- Impression des premieres lignes -----------------
					if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
					print(paramlist);
					for (b=1;b<data.length ; b++) { 	print(data[b]);	} // for
					// ----------------- Ajout de la ligne -------------------------------------
					print(datatext);
					
					// ---------------- Sauvegarde flowcam header---------------------------------
					sauve = "save=" + path+"\\meta\\"+metafile;
					selectWindow("Log");
					run("Text...",sauve);
					run('Close');
					// ---------------- Creation repertoire profil -------------------------------------------------
					pathprofile = path+"\\work\\"+SampleId+"\\";
					File.makeDirectory(pathprofile);
					
					// ---------------- Sauvegarde fichier individuel dans repertoire profil ---------------
					if (isOpen("Log")) {	selectWindow("Log");	run("Close");	} // if
					print(paramlist);						
					print(datatext);						
					sauve = "save=" + pathprofile+SampleId+"_meta.txt";
					//							getBoolean(sauve);
					selectWindow("Log");
					run("Text...",sauve);
					run('Close');
				} // else	
			} // while
		} // if done
		else if (endsWith(dirprofile,"(done)") == true) {
			otherprofile = getBoolean("Profile in database !    \n  \nEnter another profile ?   ");
		} // else if
		else {	otherprofile = getBoolean("Enter another profile ?   ");	} // else
		
	} // if add
} // if

// ---------------- FIN --------------------------------------------
ret = "ok";
return ret;
