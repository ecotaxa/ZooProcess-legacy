// -------------------------- Zooprocess_UVP5_vignettes_from_image -----------------------
version = "7.20";
date = "2015/08/13";

// Mixt présence vignettes et img entières pour UVP5HD lorsque CHOICE > 1

args = 	getArgument();
arg = 	split(args," ");
pathraw = 	arg[0];
firstimg = 	arg[1];
profileraw = 	arg[2];
threshold = 	arg[3];
threshold = 	parseInt(threshold);
smzoo =  	arg[4];
smzoo = 	parseInt(smzoo);
ratio =  	arg[5];
ratio = 	parseInt(ratio);
Larg =  	arg[6];
Larg = 	parseInt(Larg);
Haut =  	arg[7];
Haut = 	parseInt(Haut);
endimg = 	arg[8];
pathprocessed = arg[9];
profileprocesseddat = arg[10];
profileprocessedbru = arg[11];
process_type = 	arg[12];
areamin = 	arg[13];
areamin = 	parseInt(areamin);
pathresults = 	arg[14];
lastimg = 	arg[15];
lastimg = parseInt(lastimg);
yoyo_opt = 	arg[16];
firstimg = parseInt(firstimg);
uvp_type = 	arg[17];

pathrawvig = pathraw+"\\"+profileraw+"\\vignettes";
File.makeDirectory(pathrawvig);

setBatchMode(true);

// -------------- Fichier BRU -----------------------
if (isOpen("Log")) {	selectWindow("Log");	run("Close"); 	} // if
//	if (process_type == "A" ) print("index;image;blob;area;meangrey;xcenter;ycenter");

//------------- Ouverture du fichier  DAT reduit dans le repertoire final du profil ----------------
open(pathprocessed+profileprocesseddat);
wait(100);
data = getInfo();
wait(100);
run("Close");
ligne = split(data,"\n");
// ---------------- Première image -----------------------------------
dataline = 	ligne[0];
dataline = 	replace(dataline,";"," ");
dataline = 	split(dataline," ");
debimgdat = 	parseInt(dataline[0]);
firstimg = 	maxOf(firstimg,debimgdat);

// ---------------- Dernière image -----------------------------------
nbligne = 	lengthOf(ligne);
dataline = 	ligne[nbligne-1];
dataline = 	replace(dataline,";"," ");
dataline = 	split(dataline," ");
lastimgdat = 	parseInt(dataline[0]);
lastimg = 	minOf(lastimg,lastimgdat);
filelist  = 	getFileList(pathraw+profileraw+"\\");

//	aa = getBoolean(pathraw+profileraw);
//--------------- Selection des fichiers dont le nom finit par le mot ".bmp" ou PNG -------------------
j = 0;
list = newArray(filelist.length);
for (i=0; i<filelist.length ; i++) {	ctrl_bmp = endsWith(filelist[i],".bmp"); 	ctrl_png = endsWith(filelist[i],".png");
	if (ctrl_bmp == 1 || ctrl_png == 1 )	{rr = filelist[i]; 	list[j] = rr;	j = j + 1;		} // if
} // for	
lastimg_print = 	minOf(lastimg,j);

if (lastimg_print == 0) aa = getBoolean("There is no full image to process in "+pathraw+profileraw+"\\. \nIf necessary, move the images from their subfolders");
	
// --------------------------- Creation des vecteurs ------------------------
dat_line_vect = newArray(ligne.length);
bru_line_index = 0;

//	aa = getBoolean(firstimg+"   "+lastimg);

// --------------------------- BOUCLE SUR LES IMAGES ------------------------
dat_index = 0;
for (i= 0; i<nbligne ; i++) {
	if (i> 0 && i/500 == floor(i/500) ) {	p =i+1;		showStatus("Item  : "+p+" /"+ligne.length+"  => Release PC now ");	
		for (b=0;b<4;b++)	{	run("free memory");		wait(1000);	} // for	
	} // if
	showProgress(i/ligne.length);
	// ------------- fermeture Results ---------------------------------------
	if (isOpen("Results")) { selectWindow("Results");  	run('Close');	} // if
	if (isOpen("Summary")) { selectWindow("Summary");	run('Close');	} // if
	dataline = 	ligne[i];
	dataline = 	replace(dataline,";"," ");
	dataline = 	split(dataline," ");
	noimg = 	dataline[0];
	noimg = 	parseInt(noimg);
	
if (noimg >= firstimg && noimg <= lastimg) {
	
	image = 	dataline[1];			// Nom image source
	vignb = 	parseInt(vignb);
	long = 		lengthOf(image);
	image = 	substring(image,1,long);
	image = 	image+".bmp";
	open_image = 	pathraw+profileraw+"\\"+image;
//	aa = getBoolean(open_image);
	// --------------------- Test présence image --------------------------------
	if (File.exists(open_image)) {
		long = 	lengthOf(image);
		imagered = 	replace(image,".","_");
		imagered = 	substring(image, 0, long-4);
		open(pathraw+profileraw+"\\"+image);
		rename(imagered);
		run("Duplicate...", "title=msk");
		wait(100);
//		getBoolean(threshold);
		setThreshold(threshold,255);
		run("Convert to Mask");
		selectImage("msk");

		// -------------- Traitement du fichier DAT ---------------------------
		if (process_type == "A" ) {
			// -------------- Analyse particules PG --------------------------	
			run("Set Measurements...", "area mean centroid bounding limit redirect="+imagered+" decimal=1");
			areamax= smzoo - 1;
			text =  "size="+areamin+"-"+areamax+" circularity=0.00-1.00 show=Nothing display summarize";
			run("Analyze Particles...",text);
			// ------------------ On calcule le DAT et le BRU -------------------
			dat_line_vect[i] = dataline[0];
			index_dataline = dataline.length - 5;
			for (t = 1; t < index_dataline ; t++) {	dat_line_vect[i] = dat_line_vect[i] +";"+ dataline[t];	} // 	
			nb_blobs_pg = 0;
			mean_area_pg = 0;
			mean_grey_pg = 0;
			if (isOpen("Summary")) {
				selectWindow("Summary");
				line_sum = split(getInfo(), "\n");
				values = split(line_sum[1], "\t");
				nb_blobs_pg = values[1];
				mean_area_pg = values[3];
				mean_grey_pg = values[5];
				selectWindow("Summary");	
				run('Close');
			} // 
			dat_line_vect[i] = dat_line_vect[i]  +";\t"+nb_blobs_pg+";\t"+mean_area_pg+";\t"+mean_grey_pg;
			no_obj_bru_a = 0;
			// -------------- Traitement du fichier BRU ---------------------------
			for (ligne_bru = 0; ligne_bru < nResults; ligne_bru++ ) {
				area = 	getResult("Area", ligne_bru);	
				x = 	getResult("X", ligne_bru);
				y = 	getResult("Y", ligne_bru);
				mean = 	getResult("Mean", ligne_bru);
				no_obj_bru_a = ligne_bru + 1;
				//	bru_line_vect = bru_line_vect + noimg+";"+imagered+";"+no_obj_bru+";"+area+";"+mean+";"+x+";"+y+"\n";
				print(noimg+";\t"+no_obj_bru_a+";\t"+area+";\t"+mean+";\t"+x+";\t"+y);	
				//	bru_line_index++;
			} // for
//			aa = getBoolean("OK ????");
		}//
		
		// -------------- Analyse particules > SMZOO --------------------------	
		if (isOpen("Results")) { selectWindow("Results");  	run('Close');	} // if
		run("Set Measurements...", "area bounding mean centroid limit redirect="+imagered+" decimal=1");
		text =  "size="+smzoo+"-Infinity circularity=0.00-1.00 show=Nothing display summarize";		
//		aa = getBoolean(text);
		run("Analyze Particles...",text);
		selectImage("msk");
		close();
		counterfin = 	nResults;
		// -------------- Traitement du fichier DAT ---------------------------
		if (process_type == "A" ) {
			nb_blobs_g = 0;
			mean_area_g = 0;
			mean_grey_g = 0;
			if (isOpen("Summary")) {
				selectWindow("Summary");
				line_sum = split(getInfo(), "\n");
				values = split(line_sum[1], "\t");
				nb_blobs_g = values[1];
				mean_area_g = values[3];
				mean_grey_g = values[5];
				selectWindow("Summary");	
				run('Close');		
			}//
			dat_line_vect[i] = dat_line_vect[i]  +";\t"+nb_blobs_g+";\t"+mean_area_g;	
			// -------------- Traitement du fichier BRU ---------------------------
			for (ligne_bru = 0; ligne_bru < nResults; ligne_bru++ ) {
				area = 	getResult("Area", ligne_bru);	
				x = 	getResult("X", ligne_bru);
				y = 	getResult("Y", ligne_bru);
				mean = 	getResult("Mean", ligne_bru);
				no_obj_bru = no_obj_bru_a + ligne_bru + 1;
				//	bru_line_vect = bru_line_vect + noimg+";"+imagered+";"+no_obj_bru+";"+area+";"+mean+";"+x+";"+y+"\n";
				//	bru_line_vect[bru_line_index] = noimg+";"+imagered+";"+no_obj_bru+";"+area+";"+mean+";"+x+";"+y;	
				//	bru_line_index++;
				print(noimg+";\t"+no_obj_bru+";\t"+area+";\t"+mean+";\t"+x+";\t"+y);	
			} // for
		} // 
		
	// ------------ extraction vignettes à partir image source -------------------------------
	if (counterfin != 0) {
		for (j = 1; j<counterfin;j++) {
			area = 	getResult("Area", j);	
			x = 	getResult("X", j);
			y = 	getResult("Y", j);
			mean = 	getResult("Mean", j);				
			Bx = getResult("BX", j);
//			if (profileraw ==  "HDR20100913155011" && Bx>= 150 && Bx <= 1250) {
			By = getResult("BY", j);
			L = getResult("Width", j);
			H = getResult("Height", j);
			larg = L;
			haut = H;
			
			offsetx = L*(ratio-1)/2;
			offsety = H*(ratio-1)/2;
			//-----------------------------Creation de la vignette--------------------------------
			Xmin = 	Bx-offsetx;
			//---------------Cas Xmin < 0--------------------
			if ( Xmin <0 ) { 	Xa = 0;		Lnew=	L*ratio/2;		} // if
			else { 		Xa = Xmin;	Lnew=	L*ratio;		} // else	
			Xmax = Xmin+Lnew;
			// ---------------Cas Xmax > Larg---------------
			if (Xmax > Larg) {	La = Larg - Xa;		} // if
			else {		La = Lnew;			} // else
			//---------------------20 est l'espace pour ecriture de la reference de taille 10 mm
			Ymin = 	By-offsety;
			// ----------------Cas Ymin <0--------------------
			if ( Ymin <0 ) { 	Ya = 0;		Hnew=	(H*ratio/2)+By;	} // if
			else { 		Ya = Ymin;	Hnew=	(H*ratio);		} // else
			Ymax = Ymin + Hnew;
			//-----------------Cas Ymax > Haut--------------
			if (Ymax > Haut) {	Ha = Haut - Ya;			} // if
			else {		Ha = Hnew;			} // else

			//------------------------ Il faut que l'image source soit active-------------------
			selectImage(imagered);
			makeRectangle(Xa,Ya,La,Ha);
			run("Copy");
			newImage("vignette", "8-bit Black",Lnew, Hnew, 1);
			makeRectangle(Xa-Xmin,Ya-Ymin,La,Ha);
			run("Paste");
		
			// ----------------------Enregistrement---------------------------------------------------------------
			selectImage("vignette");
			no = j-1;
			if (j-1<10) no = "000"+toString(j-1);
			else if (j-1<100) no = "00"+toString(j-1);
			else if (j-1<1000) no = "0"+toString(j-1);
			text = 	pathrawvig+"\\"+imagered+"_"+no+".bmp";
			saveAs("BMP",text);
			//	selectImage(imagered+"_"+no+".bmp");	
			close();
		} // for
	} // if
	selectImage(imagered); 		close();
	} // if file exists
	} // noimg OK
} // for img

if (process_type == "A" ) {
	if (isOpen("Log")) {		
		// ------------------- Enregistrement BRU -----------------------------
		sauvebru = "save=" + pathprocessed + profileprocessedbru;
		selectWindow("Log");	
		run("Text...",sauvebru);
		sauvebru = "save=" + pathresults + profileprocessedbru;
		selectWindow("Log");	
		run("Text...",sauvebru);	
		selectWindow("Log");		
		run("Close");
	}
	// ------------------- Enregistrement DAT -----------------------------
	if (ligne.length != 0) {
		for (f = 0; f < dat_line_vect.length  ; f++) {	
			if (dat_line_vect[f] != 0) print(dat_line_vect[f]);	
		} // for
		sauvedat = "save=" + pathprocessed + profileprocesseddat;
		selectWindow("Log");	
		run("Text...",sauvedat);
		sauvedat = "save=" + pathresults + profileprocesseddat;
		selectWindow("Log");	
		run("Text...",sauvedat);
		selectWindow("Log");		run("Close");	
	}
} // if

if (isOpen("Results")) { selectWindow("Results");  	run('Close');	} // if
if (isOpen("Summary")) { selectWindow("Summary");	run('Close');	} // if

// ------------------- FIN ------------------------------
ret = pathrawvig;
return ret;

