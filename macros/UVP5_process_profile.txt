// --------------------------- UVP5_process_profile -----------------------------------------------
version = "1.00";
date = "2008/06/21";

args = getArgument();
arg = split(args, " ");
dirprocessed = arg[0];
datfilename = arg[1];
profile = arg[2];
firstimg = arg[3];
firstimg = parseInt(firstimg);


//------------- Ouverture du fichier  ----------------
open(dirprocessed + datfilename);
data = getInfo();
wait(100);
run("Close");
ligne = split(data, "\n");

// --------------- Graphiques -------------------------
Depth = newArray(ligne.length);
Smallnb = newArray(ligne.length);
Smallsize = newArray(ligne.length);
Smallgrey = newArray(ligne.length);
prevdepth = -1;
index = 0;
j = 0;
depthmax = 0;
while (index < ligne.length) {
    dataline = ligne[index];
    dataline = replace(dataline, ";", " ");
    dataline = split(dataline, "\ ");
    imgnb = dataline[0];
    imgnb = parseInt(imgnb);
    if (imgnb > firstimg) {
        depth = dataline[2];
        depth = parseFloat(depth);
        smallnb = dataline[14];
        smallnb = parseInt(smallnb);
        smallsize = dataline[15];
        smallsize = parseInt(smallsize);
        smallgrey = dataline[16];
        smallgrey = parseInt(smallgrey);
        // ---------------- Test descente ------------------------------
        if (depth > prevdepth && depth > depthmax) {
            depthmax = maxOf(depthmax, depth);
            Depth[j] = -1 * depth / 10;
            Smallnb[j] = smallnb;
            Smallsize[j] = smallsize;
            Smallgrey[j] = smallgrey;
            j++;
        } // if	
        prevdepth = depth;
    } // if firstimg
    index++;
} // while

// ------------------------- Graph data ----------------------------------
depthprop = 100 * (1 + floor(depthmax / 1000));
Zstep = 10;
if (depthprop > 100) Zstep = 100;
if (depthprop > 1000) Zstep = 500;
nmoy = 20;
Dialog.create("Graph parameters ");
Dialog.addNumber("Enter MAXIMUM depth ", depthprop);
Dialog.addNumber("Enter depth intervalles", Zstep);
Dialog.addNumber("Enter number of images for smoothing", nmoy);
Dialog.show;
miniy = Dialog.getNumber();
Zstep = Dialog.getNumber();
nmoy = Dialog.getNumber();
Zstep = abs(Zstep);
miniy = -1 * abs(miniy);

// ---------------------- suppression des valeurs nulles (remontee) et LISSAGE -------------------------------
print("A purger");
selectWindow("Log");
run("Close");
Depthj = newArray(j - nmoy);
Smallnbj = newArray(j - nmoy);
Smallsizej = newArray(j - nmoy);
Smallgreyj = newArray(j - nmoy);

maxsmallnb = 0;

for (i = 0; i < j - nmoy; i++) {
    if (i / 500 == floor(i / 500) && i != 0) {
        showStatus("Averaging data  : " + i + " /" + j);
    } // if
    depth = Depth[i];
    depth = parseFloat(depth);
    for (k = i + 1; k < i + nmoy; k++) {
        prof = Depth[k];
        prof = parseFloat(prof);
        depth = depth + prof;
    } // for
    depth = depth / nmoy;
    Depthj[i] = depth;

    smallnb = Smallnb[i];
    for (k = i + 1; k < i + nmoy; k++) {
        nb = Smallnb[k];
        nb = parseInt(nb);
        smallnb = smallnb + nb;
    } // for
    smallnb = smallnb / nmoy;
    maxsmallnb = maxOf(maxsmallnb, smallnb);
    Smallnbj[i] = smallnb;

    smallsize = Smallsize[i];
    for (k = i + 1; k < i + nmoy; k++) {
        size = Smallsize[k];
        size = parseInt(size);
        smallsize = smallsize + size;
    } // for
    smallsize = smallsize / nmoy;
    Smallsizej[i] = smallsize;

    smallgrey = Smallgrey[i];
    for (k = i + 1; k < i + nmoy; k++) {
        grey = Smallgrey[k];
        grey = parseInt(grey);
        smallgrey = smallgrey + grey;
    } // for
    smallgrey = smallgrey / nmoy;
    Smallgreyj[i] = smallgrey;

    //	print("Depth= "+depth+"  Nb= "+smallnb+"  Size= "+smallsize+"  Grey= "+smallgrey);
} // for

// ----------------- GRAPH --------------------------------------------------------------------------------------------
largeurplot = 450;
hauteurplot = 750;
largeur = (largeurplot + 70) * 3;
hauteur = hauteurplot + 50;

run("Profile Plot Options...", "width=" + largeurplot + " height=" + hauteurplot + " minimum=0 maximum=0 vertical interpolate");
maxiy = 0;
minix = 0;
nbtics = floor(abs(miniy) / Zstep) + 1;

// ---------------- Abondance -------------------------
Plot.create(profile + " abundance", profile + "   ABUNDANCE (# / L)", "Z (m)");
maxsmallnb = 100 * (1 + floor(maxsmallnb / 100));
maxix = maxOf(500, maxsmallnb);
Plot.setLimits(minix, maxix, miniy, maxiy);
Plot.setColor("red");
Plot.add("line", Smallnbj, Depthj);
Plot.show();
setLineWidth(1);
ZZ = 20 + Zstep * 750 / abs(miniy);
for (i = 1; i < nbtics; i++) {
    drawLine(50, ZZ, 500, ZZ);
    ZZ = ZZ + Zstep * 750 / abs(miniy);
} // for
saveAs("jpg", dirprocessed + "UVP5_" + profile + "_abundance.jpg");
rename("All");
text = "width=" + largeur + " height=" + hauteur + " position=Top-Left";
run("Canvas Size...", text);
//	close();

// ---------------- grey -------------------------
Plot.create(profile + " grey", profile + "   GREY (0-255)", "Z (m)");
maxix = 20;
Plot.setLimits(minix, maxix, miniy, maxiy);
Plot.setColor("blue");
Plot.add("line", Smallgreyj, Depthj);
Plot.show();
selectImage(profile + " grey");
ZZ = 20 + Zstep * 750 / abs(miniy);
for (i = 1; i < nbtics; i++) {
    drawLine(50, ZZ, 500, ZZ);
    ZZ = ZZ + Zstep * 750 / abs(miniy);
} // for
saveAs("jpg", dirprocessed + "UVP5_" + profile + "_grey.jpg");

run("Select All");
run("Copy");
selectImage("All");
makeRectangle((largeurplot + 70), 0, largeurplot + 70, hauteur);
run("Paste");

selectImage("UVP5_" + profile + "_grey.jpg");
close();

// ---------------- size -------------------------
Plot.create(profile + " size", profile + "   MEAN SIZE (pixel)", "Z (m)");
maxix = 10;
Plot.setLimits(minix, maxix, miniy, maxiy);
Plot.setColor("green");
Plot.add("line", Smallsizej, Depthj);
Plot.show();
selectImage(profile + " size");
ZZ = 20 + Zstep * 750 / abs(miniy);
for (i = 1; i < nbtics; i++) {
    drawLine(50, ZZ, 500, ZZ);
    ZZ = ZZ + Zstep * 750 / abs(miniy);
} // for
saveAs("jpg", dirprocessed + "UVP5_" + profile + "_size.jpg");

run("Select All");
run("Copy");
selectImage("All");
makeRectangle((largeurplot + 70) * 2, 0, largeurplot + 70, hauteur);
run("Paste");
saveAs("jpg", dirprocessed + "UVP5_" + profile + ".jpg");
close();

selectImage("UVP5_" + profile + "_size.jpg");
close();


// --------------- Graph detailles  -----------------------
if (miniy < 200) {
    Plot.create(profile + " abundance (0-200)", profile + "   ABUNDANCE (# / L)", "Z (m)");
    maxsmallnb = 100 * (1 + floor(maxsmallnb / 100));
    maxix = maxOf(500, maxsmallnb);
    Plot.setLimits(minix, maxix, -200, maxiy);
    Plot.setColor("red");
    Plot.add("line", Smallnbj, Depthj);
    Plot.show();
    setLineWidth(1);
    selectImage(profile + " abundance (0-200)");
    ZZ = 20 + 20 * 750 / 200;
    for (i = 1; i < 10; i++) {
        drawLine(50, ZZ, 500, ZZ);
        ZZ = ZZ + 20 * 750 / 200;
    } // for
    saveAs("jpg", dirprocessed + "UVP5_" + profile + "_abundance_200m.jpg");

    rename("Allsmall");
    text = "width=" + largeur + " height=" + hauteur + " position=Top-Left";
    run("Canvas Size...", text);

    Plot.create(profile + " grey (0-200)", profile + "   GREY (0-255)", "Z (m)");
    maxix = 20;
    Plot.setLimits(minix, maxix, -200, maxiy);
    Plot.setColor("blue");
    Plot.add("line", Smallgreyj, Depthj);
    Plot.show();
    setLineWidth(1);
    selectImage(profile + " grey (0-200)");
    ZZ = 20 + 20 * 750 / 200;
    for (i = 1; i < 10; i++) {
        drawLine(50, ZZ, 500, ZZ);
        ZZ = ZZ + 20 * 750 / 200;
    } // for
    saveAs("jpg", dirprocessed + "UVP5_" + profile + "_grey_200m.jpg");
    run("Select All");
    run("Copy");
    selectImage("Allsmall");
    makeRectangle(largeurplot + 70, 0, largeurplot + 70, hauteur);
    run("Paste");
    selectImage("UVP5_" + profile + "_grey_200m.jpg");
    close();

    Plot.create(profile + " size (0-200)", profile + "   MEAN SIZE (pixel)", "Z (m)");
    maxix = 10;
    Plot.setLimits(minix, maxix, -200, maxiy);
    Plot.setColor("green");
    Plot.add("line", Smallsizej, Depthj);
    Plot.show();
    setLineWidth(1);
    selectImage(profile + " size (0-200)");
    ZZ = 20 + 20 * 750 / 200;
    for (i = 1; i < 10; i++) {
        drawLine(50, ZZ, 500, ZZ);
        ZZ = ZZ + 20 * 750 / 200;
    } // for
    saveAs("jpg", dirprocessed + "UVP5_" + profile + "_size_200m.jpg");
    run("Select All");
    run("Copy");
    close();
    selectImage("Allsmall");
    makeRectangle((largeurplot + 70) * 2, 0, largeurplot + 70, hauteur);
    run("Paste");
    saveAs("jpg", dirprocessed + "UVP5_" + profile + "_200.jpg");
    close();
} // if

// ----------------------------- FIN ----------------------------------------------
ret = "OK";
return ret;