// --------------------------- UVP5_process_cnv -----------------------------------------------
version = "1.00";
date = "2008/06/21";

args = 	getArgument();
arg = 	split(args," ");
dirprocessed = 	arg[0];
datfilename = 	arg[1];
profile = 		arg[2];
firstimg = 	arg[3];
firstimg = parseInt(firstimg);


//------------- Ouverture du fichier  ----------------
open(dirprocessed +datfilename);
data = getInfo();
wait(100);
run("Close");
ligne = split(data,"\n");

// --------------- Graphiques -------------------------
Depth = 		newArray(ligne.length);
Smallnb = 	newArray(ligne.length);
Smallsize = 	newArray(ligne.length);
Smallgrey = 	newArray(ligne.length);
prevdepth = -1;
index = 0;
j = 0;
depthmax = 0;
while(index < ligne.length) {
	dataline = 	ligne[index];
	dataline = 	replace(dataline,";"," ");
	dataline = 	split(dataline,"\ ");
	imgnb = 		dataline[0];
	imgnb = 		parseInt(imgnb);
	if (imgnb > firstimg) {
		depth =		dataline[2];
		depth = 		parseFloat(depth);
		smallnb = 	dataline[14];
		smallnb = 	parseInt(smallnb);
		smallsize = 	dataline[15];
		smallsize = 	parseInt(smallsize);
		smallgrey = 	dataline[16];
		smallgrey = 	parseInt(smallgrey);
		// ---------------- Test descente ------------------------------
		if (depth > prevdepth && depth > depthmax) {
			depthmax = maxOf(depthmax,depth);
			Depth[j] = 	-1*depth/10;
			Smallnb[j] = 	smallnb;
			Smallsize[j] = 	smallsize;
			Smallgrey[j] = 	smallgrey;
			j++;
		} // if	
		prevdepth = depth;
	} // if firstimg
	index++;
} // while

// ------------------------- Graph data ----------------------------------
depthprop = 100 *(1+ floor(depthmax/1000));
Zstep = 10;
if (depthprop > 100) Zstep = 100;
if (depthprop > 1000) Zstep = 500;
nmoy = 20;
Dialog.create("Graph parameters ");
Dialog.addNumber("Enter MAXIMUM depth ",depthprop);
Dialog.addNumber("Enter depth intervalles",Zstep);
Dialog.addNumber("Enter number of images for smoothing",nmoy);
Dialog.show;
miniy = Dialog.getNumber();
Zstep = Dialog.getNumber();
nmoy = Dialog.getNumber();
Zstep = abs(Zstep);
miniy = -1*abs(miniy);

// ---------------------- suppression des valeurs nulles (remontee) et LISSAGE -------------------------------
print("A purger");	selectWindow("Log");		run("Close");
Depthj = 		newArray(j-nmoy);
Smallnbj = 	newArray(j-nmoy);
Smallsizej = 	newArray(j-nmoy);
Smallgreyj = 	newArray(j-nmoy);

maxsmallnb = 0;

for (i = 0 ; i<j-nmoy ; i++) {
	if (i/500 == floor(i/500) && i !=0 ) {	showStatus("Averaging data  : "+i+" /"+j);	} // if
	depth = 		Depth[i];
	depth = 		parseFloat(depth);
	for (k = i+1;k<i+nmoy;k++) {	prof = Depth[k];		prof = parseFloat(prof);	depth = 	depth+prof;		} // for
	depth = 		depth/nmoy;
	Depthj[i] = 	depth;

	smallnb = 	Smallnb[i];
	for (k = i+1;k<i+nmoy;k++) {	nb = Smallnb[k];		nb = parseInt(nb);		smallnb = smallnb+nb;	} // for
	smallnb = 	smallnb/nmoy;
	maxsmallnb = 	maxOf(maxsmallnb,smallnb);
	Smallnbj[i] = 	smallnb;	

	smallsize = 	Smallsize[i];
	for (k = i+1;k<i+nmoy;k++) {	size = Smallsize[k];		size = parseInt(size);	smallsize = smallsize+size;	} // for
	smallsize = 	smallsize/nmoy;
	Smallsizej[i] = 	smallsize;

	smallgrey = 	Smallgrey[i];
	for (k = i+1;k<i+nmoy;k++) {	grey = Smallgrey[k];	grey = parseInt(grey);	smallgrey = smallgrey+grey;	} // for
	smallgrey = 	smallgrey/nmoy;
	Smallgreyj[i] = 	smallgrey;

	//	print("Depth= "+depth+"  Nb= "+smallnb+"  Size= "+smallsize+"  Grey= "+smallgrey);
} // for

// ----------------- GRAPH --------------------------------------------------------------------------------------------
largeurplot = 450;
largeurgraph = largeurplot+70;
hauteurplot = 750;
largeur= largeurgraph*3;
hauteur = hauteurplot+50;
dimlegende = 50;

run("Profile Plot Options...", "width="+largeurplot+" height="+hauteurplot+" minimum=0 maximum=0 vertical interpolate");
maxiy = 	0;
minix = 	0;
nbtics =  floor(abs(miniy)/Zstep)+1;

// ---------------- Abondance -------------------------
Plot.create(profile+" abundance",profile,"Z (m)");
maxsmallnb = 100 *(1+ floor(maxsmallnb/100));
maxix =	maxOf(500,maxsmallnb);
Plot.setLimits(minix, maxix, miniy, maxiy);
Plot.setColor("red");
Plot.add("line", Smallnbj,Depthj);
Plot.show();
setLineWidth(1);
run("Colors...", "foreground=black background=white selection=red");
ZZ = 20 + Zstep*750/abs(miniy);
for (i=1;i<nbtics;i++) {	drawLine(50,ZZ,500,ZZ);	ZZ = ZZ+ Zstep*750/abs(miniy);	} // for
dimvertical = hauteur + dimlegende;
//	saveAs("jpg", dirprocessed+"UVP5_"+profile+"_abundance.jpg"); 
rename("UVP5_"+profile+"_abundance.jpg"); 
text = 	 "width="+largeurgraph+" height="+dimvertical+" position=Top-Left";
run("Canvas Size...",text);
rename("All");

// ---------------- grey -------------------------
Plot.create(profile+" grey",profile,"Z (m)");
maxix =	20;
Plot.setLimits(minix, maxix, miniy, maxiy);
Plot.setColor("blue");
Plot.add("line", Smallgreyj,Depthj);
Plot.show();
selectImage(profile+" grey");
ZZ = 20 + Zstep*750/abs(miniy);
for (i=1;i<nbtics;i++) {	drawLine(50,ZZ,500,ZZ);	ZZ = ZZ+ Zstep*750/abs(miniy);	} // for
//	saveAs("jpg", dirprocessed+"UVP5_"+profile+"_grey.jpg"); 
rename("UVP5_"+profile+"_grey.jpg"); 
run("Canvas Size...",text);
imageCalculator("AND", "All","UVP5_"+profile+"_grey.jpg");

// ---------------- size -------------------------
Plot.create(profile+" size",profile,"Z (m)");
maxix =	10;
Plot.setLimits(minix, maxix, miniy, maxiy);
Plot.setColor("green");
Plot.add("line", Smallsizej,Depthj);
Plot.show();
selectImage(profile+" size");
ZZ = 20 + Zstep*750/abs(miniy);
for (i=1;i<nbtics;i++) {	drawLine(50,ZZ,500,ZZ);	ZZ = ZZ+ Zstep*750/abs(miniy);	} // for
//	saveAs("jpg", dirprocessed+"UVP5_"+profile+"_size.jpg"); 
rename("UVP5_"+profile+"_size.jpg"); 
run("Canvas Size...",text);
imageCalculator("AND", "All","UVP5_"+profile+"_size.jpg");

// ----------- Image finale -------------------------------------------------------
saveAs("jpg", dirprocessed+"UVP5_"+profile+".jpg"); 

// ----------------- Ajout de sechelles sur graphe supperpose ----------
selectImage("UVP5_"+profile+".jpg");
makeRectangle(0, hauteurplot+25, largeurgraph, dimlegende);
run("Clear");
run("Select None");
setFont("SansSerif" , 16);
setLineWidth(1);
setColor(0,0,0);
drawString("UVP5   "+profile, 200, 19);
setFont("SansSerif" , 12);

// --------------- Abundance (rouge) -----------------------
setColor(255, 0, 0);
drawLine(50,hauteurplot+44,500,hauteurplot+44);
maxix = maxOf(500,maxsmallnb);
xstep = 100;
nbtics =  floor(abs(maxix)/xstep)+1;
xx = 50;
for (i=0;i<nbtics+1;i++) {	drawLine(xx,hauteurplot+44,xx,hauteurplot+44-5);	xx = xx + xstep*450/maxix;	} // for
drawString("ABUNDANCE (# / L)", 100, hauteurplot+44-3);
drawString("0", 50, hauteurplot+44-3);
drawString(maxix, 480, hauteurplot+44-3);

// --------------- Grey -------------------------------
setColor(0, 0, 255);
drawLine(50,hauteurplot+67,500,hauteurplot+67);
maxix =	20;
xstep = 2;
nbtics =  floor(abs(maxix)/xstep)+1;
xx = 50;
for (i=0;i<nbtics+1;i++) {	drawLine(xx,hauteurplot+67,xx,hauteurplot+67-5);	xx = xx + xstep*450/maxix;	} // for
drawString("GREY (8bits)", 100, hauteurplot+67-3);
drawString("0", 50, hauteurplot+67-3);
drawString(" 20", 480, hauteurplot+67-3);

// --------------- Size --------------------------------
setColor(0, 255, 0);
drawLine(50,hauteurplot+93,500,hauteurplot+93);
maxix =	10;
xstep = 1;
nbtics =  floor(abs(maxix)/xstep)+1;
xx = 50;
for (i=0;i<nbtics+1;i++) {	drawLine(xx,hauteurplot+93,xx,hauteurplot+93-5);	xx = xx + xstep*450/maxix;	} // for
drawString("MEAN SIZE (pixel)", 100, hauteurplot+93-3);
drawString("0", 50, hauteurplot+93-3);
drawString("  10", 480, hauteurplot+93-3);

//	getBoolean("Continue ?");

// ------------------ Fermeture des graphs -----------
selectImage("UVP5_"+profile+"_grey.jpg");
close();
selectImage("UVP5_"+profile+"_size.jpg");
close();
selectImage("UVP5_"+profile+".jpg");
//	close();

// --------------- Graph detailles  -----------------------
if (miniy < 200) {
	miniy = -200;
	Zstep = 20;
	// ---------------- Abondance -------------------------
	Plot.create(profile+" abundance (200m)",profile,"Z (m)");
	maxsmallnb = 100 *(1+ floor(maxsmallnb/100));
	maxix =	maxOf(500,maxsmallnb);
	Plot.setLimits(minix, maxix, miniy, maxiy);
	Plot.setColor("red");
	Plot.add("line", Smallnbj,Depthj);
	Plot.show();
	setLineWidth(1);
	setColor(0, 0, 0);
	ZZ = 20 + Zstep*750/abs(miniy);
	for (i=1;i<nbtics;i++) {	drawLine(50,ZZ,500,ZZ);	ZZ = ZZ+ Zstep*750/abs(miniy);	} // for
	dimvertical = hauteur + dimlegende;
	//	saveAs("jpg", dirprocessed+"UVP5_"+profile+"_abundance_200m.jpg"); 
	rename("UVP5_"+profile+"_abundance_200m.jpg"); 
	text = 	 "width="+largeurgraph+" height="+dimvertical+" position=Top-Left";
	run("Canvas Size...",text);
	rename("All");

	// ---------------- grey -------------------------
	Plot.create(profile+" grey (200m)",profile,"Z (m)");
	maxix =	20;
	Plot.setLimits(minix, maxix, miniy, maxiy);
	Plot.setColor("blue");
	Plot.add("line", Smallgreyj,Depthj);
	Plot.show();
	selectImage(profile+" grey (200m)");
	ZZ = 20 + Zstep*750/abs(miniy);
	setColor(0, 0, 0);
	for (i=1;i<nbtics;i++) {	drawLine(50,ZZ,500,ZZ);	ZZ = ZZ+ Zstep*750/abs(miniy);	} // for
	//	saveAs("jpg", dirprocessed+"UVP5_"+profile+"_grey_200m.jpg"); 
	rename("UVP5_"+profile+"_grey_200m.jpg"); 
	run("Canvas Size...",text);
	imageCalculator("AND", "All","UVP5_"+profile+"_grey_200m.jpg");

	// ---------------- size -------------------------
	Plot.create(profile+" size (200m)",profile,"Z (m)");
	maxix =	10;
	Plot.setLimits(minix, maxix, miniy, maxiy);
	Plot.setColor("green");
	Plot.add("line", Smallsizej,Depthj);
	Plot.show();
	selectImage(profile+" size (200m)");
	ZZ = 20 + Zstep*750/abs(miniy);
	setColor(0, 0, 0);
	for (i=1;i<nbtics;i++) {	drawLine(50,ZZ,500,ZZ);	ZZ = ZZ+ Zstep*750/abs(miniy);	} // for
	//	saveAs("jpg", dirprocessed+"UVP5_"+profile+"_size_200m.jpg"); 
	rename("UVP5_"+profile+"_size_200m.jpg"); 
	run("Canvas Size...",text);
	imageCalculator("AND", "All","UVP5_"+profile+"_size_200m.jpg");

	// ----------- Image finale -------------------------------------------------------
	saveAs("jpg", dirprocessed+"UVP5_"+profile+"_200m.jpg"); 

	// ----------------- Ajout des echelles sur graphe supperpose ----------
	selectImage("UVP5_"+profile+"_200m.jpg");
	makeRectangle(0, hauteurplot+25, largeurgraph, dimlegende);
	run("Clear");
	run("Select None");
	setFont("SansSerif" , 16);
	setLineWidth(1);
	setColor(0,0,0);
	drawString("UVP5   "+profile, 200, 19);
	setFont("SansSerif" , 12);

	// --------------- Abundance (rouge) -----------------------
	setColor(255, 0, 0);
	drawLine(50,hauteurplot+44,500,hauteurplot+44);
	maxix = maxOf(500,maxsmallnb);
	xstep = 100;
	nbtics =  floor(abs(maxix)/xstep)+1;
	xx = 50;
	for (i=0;i<nbtics+1;i++) {	drawLine(xx,hauteurplot+44,xx,hauteurplot+44-5);	xx = xx + xstep*450/maxix;	} // for
	drawString("ABUNDANCE (# / L)", 100, hauteurplot+44-3);
	drawString("0", 50, hauteurplot+44-3);
	drawString(maxix, 480, hauteurplot+44-3);

	// --------------- Grey -------------------------------
	setColor(0, 0, 255);
	drawLine(50,hauteurplot+67,500,hauteurplot+67);
	maxix =	20;
	xstep = 2;
	nbtics =  floor(abs(maxix)/xstep)+1;
	xx = 50;
	for (i=0;i<nbtics+1;i++) {	drawLine(xx,hauteurplot+67,xx,hauteurplot+67-5);	xx = xx + xstep*450/maxix;	} // for
	drawString("GREY (8bits)", 100, hauteurplot+67-3);
	drawString("0", 50, hauteurplot+67-3);
	drawString(" 20", 480, hauteurplot+67-3);

	// --------------- Size --------------------------------
	setColor(0, 255, 0);
	drawLine(50,hauteurplot+93,500,hauteurplot+93);
	maxix =	10;
	xstep = 1;
	nbtics =  floor(abs(maxix)/xstep)+1;
	xx = 50;
	for (i=0;i<nbtics+1;i++) {	drawLine(xx,hauteurplot+93,xx,hauteurplot+93-5);	xx = xx + xstep*450/maxix;	} // for
	drawString("MEAN SIZE (pixel)", 100, hauteurplot+93-3);
	drawString("0", 50, hauteurplot+93-3);
	drawString("  10", 480, hauteurplot+93-3);

	getBoolean("Continue ?");

	// ------------------ Fermeture des graphs -----------
	selectImage("UVP5_"+profile+"_grey_200m.jpg");
	close();
	selectImage("UVP5_"+profile+"_size_200m.jpg");
	close();
	selectImage("UVP5_"+profile+"_200m.jpg");
	//	close();
} // if

// ----------------------------- FIN ----------------------------------------------
ret = "OK";
return ret;
